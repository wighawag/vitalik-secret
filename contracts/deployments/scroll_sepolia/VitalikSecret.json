{
  "address": "0xcc0925082bfb1122534d1a7a33bd1dc990113a39",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "NonExistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonceOverflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provided",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "currentOwner",
          "type": "address"
        }
      ],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferRejected",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "RANDOM",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SOLUTION",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOperator",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIDs",
          "type": "uint256[]"
        }
      ],
      "name": "ownerAndLastTransferBlockNumberList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lastTransferBlockNumber",
              "type": "uint256"
            }
          ],
          "internalType": "struct IERC721WithBlocknumber.OwnerData[]",
          "name": "ownersData",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "ownerAndLastTransferBlockNumberOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum VitalikSecret.Move[]",
          "name": "moves",
          "type": "uint8[]"
        }
      ],
      "name": "proposeSolution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "contractName": "VitalikSecret",
  "sourceName": "src/VitalikSecret.sol",
  "bytecode": "0x60a0604052600f60805234801561001557600080fd5b50608051611aa36100316000396000610d500152611aa36000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806395d89b41116100cd578063c87b56dd11610081578063e985e9c511610066578063e985e9c51461039a578063f3945282146103e3578063f964d1091461040357600080fd5b8063c87b56dd1461033d578063d9158ec81461035e57600080fd5b8063b88d4fde116100b2578063b88d4fde1461030f578063bdffd28214610322578063c370c3c71461032a57600080fd5b806395d89b41146102c3578063a22cb465146102fc57600080fd5b806323b872dd1161012457806348f3c51c1161010957806348f3c51c146102335780636352211e1461028f57806370a08231146102a257600080fd5b806323b872dd1461020d57806342842e0e1461022057600080fd5b806301ffc9a71461015657806306fdde031461017e578063081812fc146101c0578063095ea7b3146101f8575b600080fd5b6101696101643660046114c0565b61043f565b60405190151581526020015b60405180910390f35b60408051808201909152600e81527f564954414c494b2053454352455400000000000000000000000000000000000060208201525b6040516101759190611548565b6101d36101ce36600461155b565b610524565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610175565b61020b610206366004611598565b6105e8565b005b61020b61021b3660046115c2565b6106f9565b61020b61022e3660046115c2565b610977565b61026361024136600461155b565b6000908152602081905260409020549067ffffffffffffffff60b883901c1690565b6040805173ffffffffffffffffffffffffffffffffffffffff9093168352602083019190915201610175565b6101d361029d36600461155b565b610997565b6102b56102b03660046115fe565b6109fb565b604051908152602001610175565b60408051808201909152600381527f565453000000000000000000000000000000000000000000000000000000000060208201526101b3565b61020b61030a366004611619565b610a8b565b61020b61031d366004611684565b610a9a565b6102b5600481565b61020b6103383660046117ca565b610d1a565b6101b361034b36600461155b565b5060408051602081019091526000815290565b6101b36040518060400160405280601281526020017f307831323334353637383941424344454630000000000000000000000000000081525081565b6101696103a836600461180c565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291909152205460ff1690565b6103f66103f13660046117ca565b610e32565b604051610175919061183f565b6101b36040518060400160405280601281526020017f307832313334353637383941424344464530000000000000000000000000000081525081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614806104d257507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b8061051e57507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6000818152602081905260408120547f80000000000000000000000000000000000000000000000000000000000000008082161473ffffffffffffffffffffffffffffffffffffffff82166105ad576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018590526024015b60405180910390fd5b80156105de5750505060009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b5060009392505050565b6000818152602081905260409020546affffffffffffffffffffff60a082901c1673ffffffffffffffffffffffffffffffffffffffff8216610659576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018490526024016105a4565b3373ffffffffffffffffffffffffffffffffffffffff8316148015906106b0575073ffffffffffffffffffffffffffffffffffffffff8216600090815260026020908152604080832033845290915290205460ff16155b156106e7576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106f382828686610f69565b50505050565b6000818152602081905260409020546affffffffffffffffffffff60a082901c167f80000000000000000000000000000000000000000000000000000000000000008083161473ffffffffffffffffffffffffffffffffffffffff831661078f576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018590526024016105a4565b8273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614610814576040517f23295f0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8088166004830152841660248201526044016105a4565b73ffffffffffffffffffffffffffffffffffffffff8516158061084c575073ffffffffffffffffffffffffffffffffffffffff851630145b1561089b576040517f8e4c8aa600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff861660048201526024016105a4565b3373ffffffffffffffffffffffffffffffffffffffff87161461095d578080156108e8575060008481526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b158015610926575073ffffffffffffffffffffffffffffffffffffffff8616600090815260026020908152604080832033845290915290205460ff16155b1561095d576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61096f868686601886901c15156110f2565b505050505050565b61099283838360405180602001604052806000815250610a9a565b505050565b60008181526020819052604090205473ffffffffffffffffffffffffffffffffffffffff81166109f6576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018390526024016105a4565b919050565b600073ffffffffffffffffffffffffffffffffffffffff8216610a62576040517f8e4c8aa600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024016105a4565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b610a963383836111d5565b5050565b6000828152602081905260409020546affffffffffffffffffffff60a082901c167f80000000000000000000000000000000000000000000000000000000000000008083161473ffffffffffffffffffffffffffffffffffffffff8316610b30576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018690526024016105a4565b8673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610bb5576040517f23295f0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8089166004830152841660248201526044016105a4565b73ffffffffffffffffffffffffffffffffffffffff86161580610bed575073ffffffffffffffffffffffffffffffffffffffff861630145b15610c3c576040517f8e4c8aa600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff871660048201526024016105a4565b3373ffffffffffffffffffffffffffffffffffffffff881614610cfe57808015610c89575060008581526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b158015610cc7575073ffffffffffffffffffffffffffffffffffffffff8716600090815260026020908152604080832033845290915290205460ff16155b15610cfe576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d11878787601886901c15158861126d565b50505050505050565b60408051808201909152601281527f307832313334353637383941424344464530000000000000000000000000000060208201527f000000000000000000000000000000000000000000000000000000000000000060005b83811015610e2b576000610dad8484888886818110610d9357610d936118a4565b9050602002016020810190610da891906118d3565b6112d9565b9350905080610e18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f494e56414c49445f4d4f5645000000000000000000000000000000000000000060448201526064016105a4565b5080610e2381611923565b915050610d72565b5050505050565b60608167ffffffffffffffff811115610e4d57610e4d611655565b604051908082528060200260200182016040528015610e9257816020015b6040805180820190915260008082526020820152815260200190600190039081610e6b5790505b50905060005b82811015610f62576000806000868685818110610eb757610eb76118a4565b90506020020135815260200190815260200160002054905080838381518110610ee257610ee26118a4565b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060b881901c67ffffffffffffffff16838381518110610f4157610f416118a4565b60209081029190910181015101525080610f5a81611923565b915050610e98565b5092915050565b601883901c6000610f7b85600161195b565b905081601882901c14610fba576040517fadc1557200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841661100757600083815260208190526040902060a082901b73ffffffffffffffffffffffffffffffffffffffff881617905561108f565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8a811660a087901b177f800000000000000000000000000000000000000000000000000000000000000017909155600390925290912080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169186169190911790555b828473ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602081905260409091208054909101905580156111735773ffffffffffffffffffffffffffffffffffffffff8416600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190555b6000828152602081905260408082204360b81b73ffffffffffffffffffffffffffffffffffffffff80881691821790925591518593918816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a450505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611279858585856110f2565b73ffffffffffffffffffffffffffffffffffffffff84163b15610e2b576112a333868686856113ba565b610e2b576040517f4e472e5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080806112e860048661199d565b905060006112f76004876119b1565b9050600085600381111561130d5761130d6119c5565b0361132f5761131e600160046119f4565b82101561132a57600193505b6113b0565b6001856003811115611343576113436119c5565b0361136457611354600160046119f4565b81101561132a57600193506113b0565b6002856003811115611378576113786119c5565b0361138c57811561132a57600193506113b0565b60038560038111156113a0576113a06119c5565b036113b05780156113b057600193505b5050935093915050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663150b7a02888887876040518563ffffffff1660e01b81526004016113fc9493929190611a07565b6020604051808303816000875af115801561141b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143f9190611a50565b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001491505095945050505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146114bd57600080fd5b50565b6000602082840312156114d257600080fd5b81356114dd8161148f565b9392505050565b6000815180845260005b8181101561150a576020818501810151868301820152016114ee565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006114dd60208301846114e4565b60006020828403121561156d57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109f657600080fd5b600080604083850312156115ab57600080fd5b6115b483611574565b946020939093013593505050565b6000806000606084860312156115d757600080fd5b6115e084611574565b92506115ee60208501611574565b9150604084013590509250925092565b60006020828403121561161057600080fd5b6114dd82611574565b6000806040838503121561162c57600080fd5b61163583611574565b91506020830135801515811461164a57600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561169a57600080fd5b6116a385611574565b93506116b160208601611574565b925060408501359150606085013567ffffffffffffffff808211156116d557600080fd5b818701915087601f8301126116e957600080fd5b8135818111156116fb576116fb611655565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561174157611741611655565b816040528281528a602084870101111561175a57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008083601f84011261179057600080fd5b50813567ffffffffffffffff8111156117a857600080fd5b6020830191508360208260051b85010111156117c357600080fd5b9250929050565b600080602083850312156117dd57600080fd5b823567ffffffffffffffff8111156117f457600080fd5b6118008582860161177e565b90969095509350505050565b6000806040838503121561181f57600080fd5b61182883611574565b915061183660208401611574565b90509250929050565b602080825282518282018190526000919060409081850190868401855b82811015611897578151805173ffffffffffffffffffffffffffffffffffffffff16855286015186850152928401929085019060010161185c565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156118e557600080fd5b8135600481106114dd57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611954576119546118f4565b5060010190565b8082018082111561051e5761051e6118f4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826119ac576119ac61196e565b500690565b6000826119c0576119c061196e565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8181038181111561051e5761051e6118f4565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611a4660808301846114e4565b9695505050505050565b600060208284031215611a6257600080fd5b81516114dd8161148f56fea264697066735822122012e0017d728e57d31d65c17e07771330b08b70e61e3e9fd634906b30ae10a87d64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101515760003560e01c806395d89b41116100cd578063c87b56dd11610081578063e985e9c511610066578063e985e9c51461039a578063f3945282146103e3578063f964d1091461040357600080fd5b8063c87b56dd1461033d578063d9158ec81461035e57600080fd5b8063b88d4fde116100b2578063b88d4fde1461030f578063bdffd28214610322578063c370c3c71461032a57600080fd5b806395d89b41146102c3578063a22cb465146102fc57600080fd5b806323b872dd1161012457806348f3c51c1161010957806348f3c51c146102335780636352211e1461028f57806370a08231146102a257600080fd5b806323b872dd1461020d57806342842e0e1461022057600080fd5b806301ffc9a71461015657806306fdde031461017e578063081812fc146101c0578063095ea7b3146101f8575b600080fd5b6101696101643660046114c0565b61043f565b60405190151581526020015b60405180910390f35b60408051808201909152600e81527f564954414c494b2053454352455400000000000000000000000000000000000060208201525b6040516101759190611548565b6101d36101ce36600461155b565b610524565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610175565b61020b610206366004611598565b6105e8565b005b61020b61021b3660046115c2565b6106f9565b61020b61022e3660046115c2565b610977565b61026361024136600461155b565b6000908152602081905260409020549067ffffffffffffffff60b883901c1690565b6040805173ffffffffffffffffffffffffffffffffffffffff9093168352602083019190915201610175565b6101d361029d36600461155b565b610997565b6102b56102b03660046115fe565b6109fb565b604051908152602001610175565b60408051808201909152600381527f565453000000000000000000000000000000000000000000000000000000000060208201526101b3565b61020b61030a366004611619565b610a8b565b61020b61031d366004611684565b610a9a565b6102b5600481565b61020b6103383660046117ca565b610d1a565b6101b361034b36600461155b565b5060408051602081019091526000815290565b6101b36040518060400160405280601281526020017f307831323334353637383941424344454630000000000000000000000000000081525081565b6101696103a836600461180c565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291909152205460ff1690565b6103f66103f13660046117ca565b610e32565b604051610175919061183f565b6101b36040518060400160405280601281526020017f307832313334353637383941424344464530000000000000000000000000000081525081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614806104d257507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b8061051e57507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6000818152602081905260408120547f80000000000000000000000000000000000000000000000000000000000000008082161473ffffffffffffffffffffffffffffffffffffffff82166105ad576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018590526024015b60405180910390fd5b80156105de5750505060009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b5060009392505050565b6000818152602081905260409020546affffffffffffffffffffff60a082901c1673ffffffffffffffffffffffffffffffffffffffff8216610659576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018490526024016105a4565b3373ffffffffffffffffffffffffffffffffffffffff8316148015906106b0575073ffffffffffffffffffffffffffffffffffffffff8216600090815260026020908152604080832033845290915290205460ff16155b156106e7576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106f382828686610f69565b50505050565b6000818152602081905260409020546affffffffffffffffffffff60a082901c167f80000000000000000000000000000000000000000000000000000000000000008083161473ffffffffffffffffffffffffffffffffffffffff831661078f576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018590526024016105a4565b8273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614610814576040517f23295f0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8088166004830152841660248201526044016105a4565b73ffffffffffffffffffffffffffffffffffffffff8516158061084c575073ffffffffffffffffffffffffffffffffffffffff851630145b1561089b576040517f8e4c8aa600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff861660048201526024016105a4565b3373ffffffffffffffffffffffffffffffffffffffff87161461095d578080156108e8575060008481526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b158015610926575073ffffffffffffffffffffffffffffffffffffffff8616600090815260026020908152604080832033845290915290205460ff16155b1561095d576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61096f868686601886901c15156110f2565b505050505050565b61099283838360405180602001604052806000815250610a9a565b505050565b60008181526020819052604090205473ffffffffffffffffffffffffffffffffffffffff81166109f6576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018390526024016105a4565b919050565b600073ffffffffffffffffffffffffffffffffffffffff8216610a62576040517f8e4c8aa600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024016105a4565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b610a963383836111d5565b5050565b6000828152602081905260409020546affffffffffffffffffffff60a082901c167f80000000000000000000000000000000000000000000000000000000000000008083161473ffffffffffffffffffffffffffffffffffffffff8316610b30576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018690526024016105a4565b8673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610bb5576040517f23295f0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8089166004830152841660248201526044016105a4565b73ffffffffffffffffffffffffffffffffffffffff86161580610bed575073ffffffffffffffffffffffffffffffffffffffff861630145b15610c3c576040517f8e4c8aa600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff871660048201526024016105a4565b3373ffffffffffffffffffffffffffffffffffffffff881614610cfe57808015610c89575060008581526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b158015610cc7575073ffffffffffffffffffffffffffffffffffffffff8716600090815260026020908152604080832033845290915290205460ff16155b15610cfe576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d11878787601886901c15158861126d565b50505050505050565b60408051808201909152601281527f307832313334353637383941424344464530000000000000000000000000000060208201527f000000000000000000000000000000000000000000000000000000000000000060005b83811015610e2b576000610dad8484888886818110610d9357610d936118a4565b9050602002016020810190610da891906118d3565b6112d9565b9350905080610e18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f494e56414c49445f4d4f5645000000000000000000000000000000000000000060448201526064016105a4565b5080610e2381611923565b915050610d72565b5050505050565b60608167ffffffffffffffff811115610e4d57610e4d611655565b604051908082528060200260200182016040528015610e9257816020015b6040805180820190915260008082526020820152815260200190600190039081610e6b5790505b50905060005b82811015610f62576000806000868685818110610eb757610eb76118a4565b90506020020135815260200190815260200160002054905080838381518110610ee257610ee26118a4565b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060b881901c67ffffffffffffffff16838381518110610f4157610f416118a4565b60209081029190910181015101525080610f5a81611923565b915050610e98565b5092915050565b601883901c6000610f7b85600161195b565b905081601882901c14610fba576040517fadc1557200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841661100757600083815260208190526040902060a082901b73ffffffffffffffffffffffffffffffffffffffff881617905561108f565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8a811660a087901b177f800000000000000000000000000000000000000000000000000000000000000017909155600390925290912080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169186169190911790555b828473ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602081905260409091208054909101905580156111735773ffffffffffffffffffffffffffffffffffffffff8416600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190555b6000828152602081905260408082204360b81b73ffffffffffffffffffffffffffffffffffffffff80881691821790925591518593918816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a450505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611279858585856110f2565b73ffffffffffffffffffffffffffffffffffffffff84163b15610e2b576112a333868686856113ba565b610e2b576040517f4e472e5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080806112e860048661199d565b905060006112f76004876119b1565b9050600085600381111561130d5761130d6119c5565b0361132f5761131e600160046119f4565b82101561132a57600193505b6113b0565b6001856003811115611343576113436119c5565b0361136457611354600160046119f4565b81101561132a57600193506113b0565b6002856003811115611378576113786119c5565b0361138c57811561132a57600193506113b0565b60038560038111156113a0576113a06119c5565b036113b05780156113b057600193505b5050935093915050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663150b7a02888887876040518563ffffffff1660e01b81526004016113fc9493929190611a07565b6020604051808303816000875af115801561141b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143f9190611a50565b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001491505095945050505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146114bd57600080fd5b50565b6000602082840312156114d257600080fd5b81356114dd8161148f565b9392505050565b6000815180845260005b8181101561150a576020818501810151868301820152016114ee565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006114dd60208301846114e4565b60006020828403121561156d57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109f657600080fd5b600080604083850312156115ab57600080fd5b6115b483611574565b946020939093013593505050565b6000806000606084860312156115d757600080fd5b6115e084611574565b92506115ee60208501611574565b9150604084013590509250925092565b60006020828403121561161057600080fd5b6114dd82611574565b6000806040838503121561162c57600080fd5b61163583611574565b91506020830135801515811461164a57600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561169a57600080fd5b6116a385611574565b93506116b160208601611574565b925060408501359150606085013567ffffffffffffffff808211156116d557600080fd5b818701915087601f8301126116e957600080fd5b8135818111156116fb576116fb611655565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561174157611741611655565b816040528281528a602084870101111561175a57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008083601f84011261179057600080fd5b50813567ffffffffffffffff8111156117a857600080fd5b6020830191508360208260051b85010111156117c357600080fd5b9250929050565b600080602083850312156117dd57600080fd5b823567ffffffffffffffff8111156117f457600080fd5b6118008582860161177e565b90969095509350505050565b6000806040838503121561181f57600080fd5b61182883611574565b915061183660208401611574565b90509250929050565b602080825282518282018190526000919060409081850190868401855b82811015611897578151805173ffffffffffffffffffffffffffffffffffffffff16855286015186850152928401929085019060010161185c565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156118e557600080fd5b8135600481106114dd57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611954576119546118f4565b5060010190565b8082018082111561051e5761051e6118f4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826119ac576119ac61196e565b500690565b6000826119c0576119c061196e565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8181038181111561051e5761051e6118f4565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611a4660808301846114e4565b9695505050505050565b600060208284031215611a6257600080fd5b81516114dd8161148f56fea264697066735822122012e0017d728e57d31d65c17e07771330b08b70e61e3e9fd634906b30ae10a87d64736f6c63430008140033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "errors": {
      "InvalidAddress(address)": [
        {
          "params": {
            "addr": "invalid address"
          }
        }
      ],
      "NonExistentToken(uint256)": [
        {
          "params": {
            "tokenID": "id of the expected token"
          }
        }
      ],
      "NotOwner(address,address)": [
        {
          "params": {
            "currentOwner": "the current owner",
            "provided": "the address expected to be the current owner"
          }
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "params": {
          "approved": "account who can know transfer on the owner's behalf",
          "owner": "current owner of the token",
          "tokenID": "id of the token being approved"
        }
      },
      "ApprovalForAll(address,address,bool)": {
        "params": {
          "approved": "whether it is approved or not",
          "operator": "account who can know transfer on the owner's behalf",
          "owner": "the account granting rights over all of its token"
        }
      },
      "Transfer(address,address,uint256)": {
        "params": {
          "from": "the account the token is sent from",
          "to": "the account the token is sent to",
          "tokenID": "id of the token being sent"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "params": {
          "operator": "The address receiving the approval.",
          "tokenID": "The id of the token."
        }
      },
      "balanceOf(address)": {
        "params": {
          "owner": "The address to look for."
        },
        "returns": {
          "balance": "The number of tokens owned by the address."
        }
      },
      "getApproved(uint256)": {
        "params": {
          "tokenID": "The id of the token."
        },
        "returns": {
          "operator": "The address of the operator."
        }
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "operator": "The address of the operator.",
          "owner": "The address of the owner."
        },
        "returns": {
          "isOperator": "The status of the approval."
        }
      },
      "ownerAndLastTransferBlockNumberList(uint256[])": {
        "params": {
          "tokenIDs": "The list of token ids to check."
        },
        "returns": {
          "ownersData": "The list of (owner, lastTransferBlockNumber) for each ids given as input."
        }
      },
      "ownerAndLastTransferBlockNumberOf(uint256)": {
        "params": {
          "tokenID": "The id of the token."
        },
        "returns": {
          "blockNumber": "The blocknumber at which the last transfer of that id happened.",
          "owner": "The address of the token owner."
        }
      },
      "ownerOf(uint256)": {
        "params": {
          "tokenID": "The id of the token."
        },
        "returns": {
          "owner": "The address of the token owner."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "params": {
          "from": "The send of the token.",
          "to": "The recipient of the token.",
          "tokenID": "The id of the token."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "params": {
          "data": "Additional data.",
          "from": "The sender of the token.",
          "to": "The recipient of the token.",
          "tokenID": "The id of the token."
        }
      },
      "setApprovalForAll(address,bool)": {
        "params": {
          "approved": "The determination of the approval.",
          "operator": "The address receiving the approval."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.",
        "params": {
          "interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "returns": {
          "_0": "`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise"
        }
      },
      "tokenURI(uint256)": {
        "details": "Throws if `tokenID` is not a valid NFT. URIs are defined in RFC  3986. The URI may point to a JSON file that conforms to the \"ERC721  Metadata JSON Schema\".",
        "params": {
          "tokenID": "id of the token being queried."
        }
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "from": "The sender of the token.",
          "to": "The recipient of the token.",
          "tokenID": "The id of the token."
        }
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {},
      "generatedSources": [],
      "linkReferences": {},
      "object": "60a0604052600f60805234801561001557600080fd5b50608051611aa36100316000396000610d500152611aa36000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806395d89b41116100cd578063c87b56dd11610081578063e985e9c511610066578063e985e9c51461039a578063f3945282146103e3578063f964d1091461040357600080fd5b8063c87b56dd1461033d578063d9158ec81461035e57600080fd5b8063b88d4fde116100b2578063b88d4fde1461030f578063bdffd28214610322578063c370c3c71461032a57600080fd5b806395d89b41146102c3578063a22cb465146102fc57600080fd5b806323b872dd1161012457806348f3c51c1161010957806348f3c51c146102335780636352211e1461028f57806370a08231146102a257600080fd5b806323b872dd1461020d57806342842e0e1461022057600080fd5b806301ffc9a71461015657806306fdde031461017e578063081812fc146101c0578063095ea7b3146101f8575b600080fd5b6101696101643660046114c0565b61043f565b60405190151581526020015b60405180910390f35b60408051808201909152600e81527f564954414c494b2053454352455400000000000000000000000000000000000060208201525b6040516101759190611548565b6101d36101ce36600461155b565b610524565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610175565b61020b610206366004611598565b6105e8565b005b61020b61021b3660046115c2565b6106f9565b61020b61022e3660046115c2565b610977565b61026361024136600461155b565b6000908152602081905260409020549067ffffffffffffffff60b883901c1690565b6040805173ffffffffffffffffffffffffffffffffffffffff9093168352602083019190915201610175565b6101d361029d36600461155b565b610997565b6102b56102b03660046115fe565b6109fb565b604051908152602001610175565b60408051808201909152600381527f565453000000000000000000000000000000000000000000000000000000000060208201526101b3565b61020b61030a366004611619565b610a8b565b61020b61031d366004611684565b610a9a565b6102b5600481565b61020b6103383660046117ca565b610d1a565b6101b361034b36600461155b565b5060408051602081019091526000815290565b6101b36040518060400160405280601281526020017f307831323334353637383941424344454630000000000000000000000000000081525081565b6101696103a836600461180c565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291909152205460ff1690565b6103f66103f13660046117ca565b610e32565b604051610175919061183f565b6101b36040518060400160405280601281526020017f307832313334353637383941424344464530000000000000000000000000000081525081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614806104d257507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b8061051e57507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6000818152602081905260408120547f80000000000000000000000000000000000000000000000000000000000000008082161473ffffffffffffffffffffffffffffffffffffffff82166105ad576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018590526024015b60405180910390fd5b80156105de5750505060009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b5060009392505050565b6000818152602081905260409020546affffffffffffffffffffff60a082901c1673ffffffffffffffffffffffffffffffffffffffff8216610659576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018490526024016105a4565b3373ffffffffffffffffffffffffffffffffffffffff8316148015906106b0575073ffffffffffffffffffffffffffffffffffffffff8216600090815260026020908152604080832033845290915290205460ff16155b156106e7576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106f382828686610f69565b50505050565b6000818152602081905260409020546affffffffffffffffffffff60a082901c167f80000000000000000000000000000000000000000000000000000000000000008083161473ffffffffffffffffffffffffffffffffffffffff831661078f576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018590526024016105a4565b8273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614610814576040517f23295f0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8088166004830152841660248201526044016105a4565b73ffffffffffffffffffffffffffffffffffffffff8516158061084c575073ffffffffffffffffffffffffffffffffffffffff851630145b1561089b576040517f8e4c8aa600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff861660048201526024016105a4565b3373ffffffffffffffffffffffffffffffffffffffff87161461095d578080156108e8575060008481526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b158015610926575073ffffffffffffffffffffffffffffffffffffffff8616600090815260026020908152604080832033845290915290205460ff16155b1561095d576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61096f868686601886901c15156110f2565b505050505050565b61099283838360405180602001604052806000815250610a9a565b505050565b60008181526020819052604090205473ffffffffffffffffffffffffffffffffffffffff81166109f6576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018390526024016105a4565b919050565b600073ffffffffffffffffffffffffffffffffffffffff8216610a62576040517f8e4c8aa600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024016105a4565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b610a963383836111d5565b5050565b6000828152602081905260409020546affffffffffffffffffffff60a082901c167f80000000000000000000000000000000000000000000000000000000000000008083161473ffffffffffffffffffffffffffffffffffffffff8316610b30576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018690526024016105a4565b8673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610bb5576040517f23295f0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8089166004830152841660248201526044016105a4565b73ffffffffffffffffffffffffffffffffffffffff86161580610bed575073ffffffffffffffffffffffffffffffffffffffff861630145b15610c3c576040517f8e4c8aa600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff871660048201526024016105a4565b3373ffffffffffffffffffffffffffffffffffffffff881614610cfe57808015610c89575060008581526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b158015610cc7575073ffffffffffffffffffffffffffffffffffffffff8716600090815260026020908152604080832033845290915290205460ff16155b15610cfe576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d11878787601886901c15158861126d565b50505050505050565b60408051808201909152601281527f307832313334353637383941424344464530000000000000000000000000000060208201527f000000000000000000000000000000000000000000000000000000000000000060005b83811015610e2b576000610dad8484888886818110610d9357610d936118a4565b9050602002016020810190610da891906118d3565b6112d9565b9350905080610e18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f494e56414c49445f4d4f5645000000000000000000000000000000000000000060448201526064016105a4565b5080610e2381611923565b915050610d72565b5050505050565b60608167ffffffffffffffff811115610e4d57610e4d611655565b604051908082528060200260200182016040528015610e9257816020015b6040805180820190915260008082526020820152815260200190600190039081610e6b5790505b50905060005b82811015610f62576000806000868685818110610eb757610eb76118a4565b90506020020135815260200190815260200160002054905080838381518110610ee257610ee26118a4565b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060b881901c67ffffffffffffffff16838381518110610f4157610f416118a4565b60209081029190910181015101525080610f5a81611923565b915050610e98565b5092915050565b601883901c6000610f7b85600161195b565b905081601882901c14610fba576040517fadc1557200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841661100757600083815260208190526040902060a082901b73ffffffffffffffffffffffffffffffffffffffff881617905561108f565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8a811660a087901b177f800000000000000000000000000000000000000000000000000000000000000017909155600390925290912080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169186169190911790555b828473ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602081905260409091208054909101905580156111735773ffffffffffffffffffffffffffffffffffffffff8416600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190555b6000828152602081905260408082204360b81b73ffffffffffffffffffffffffffffffffffffffff80881691821790925591518593918816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a450505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611279858585856110f2565b73ffffffffffffffffffffffffffffffffffffffff84163b15610e2b576112a333868686856113ba565b610e2b576040517f4e472e5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080806112e860048661199d565b905060006112f76004876119b1565b9050600085600381111561130d5761130d6119c5565b0361132f5761131e600160046119f4565b82101561132a57600193505b6113b0565b6001856003811115611343576113436119c5565b0361136457611354600160046119f4565b81101561132a57600193506113b0565b6002856003811115611378576113786119c5565b0361138c57811561132a57600193506113b0565b60038560038111156113a0576113a06119c5565b036113b05780156113b057600193505b5050935093915050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663150b7a02888887876040518563ffffffff1660e01b81526004016113fc9493929190611a07565b6020604051808303816000875af115801561141b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143f9190611a50565b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001491505095945050505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146114bd57600080fd5b50565b6000602082840312156114d257600080fd5b81356114dd8161148f565b9392505050565b6000815180845260005b8181101561150a576020818501810151868301820152016114ee565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006114dd60208301846114e4565b60006020828403121561156d57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109f657600080fd5b600080604083850312156115ab57600080fd5b6115b483611574565b946020939093013593505050565b6000806000606084860312156115d757600080fd5b6115e084611574565b92506115ee60208501611574565b9150604084013590509250925092565b60006020828403121561161057600080fd5b6114dd82611574565b6000806040838503121561162c57600080fd5b61163583611574565b91506020830135801515811461164a57600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561169a57600080fd5b6116a385611574565b93506116b160208601611574565b925060408501359150606085013567ffffffffffffffff808211156116d557600080fd5b818701915087601f8301126116e957600080fd5b8135818111156116fb576116fb611655565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561174157611741611655565b816040528281528a602084870101111561175a57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008083601f84011261179057600080fd5b50813567ffffffffffffffff8111156117a857600080fd5b6020830191508360208260051b85010111156117c357600080fd5b9250929050565b600080602083850312156117dd57600080fd5b823567ffffffffffffffff8111156117f457600080fd5b6118008582860161177e565b90969095509350505050565b6000806040838503121561181f57600080fd5b61182883611574565b915061183660208401611574565b90509250929050565b602080825282518282018190526000919060409081850190868401855b82811015611897578151805173ffffffffffffffffffffffffffffffffffffffff16855286015186850152928401929085019060010161185c565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156118e557600080fd5b8135600481106114dd57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611954576119546118f4565b5060010190565b8082018082111561051e5761051e6118f4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826119ac576119ac61196e565b500690565b6000826119c0576119c061196e565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8181038181111561051e5761051e6118f4565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611a4660808301846114e4565b9695505050505050565b600060208284031215611a6257600080fd5b81516114dd8161148f56fea264697066735822122012e0017d728e57d31d65c17e07771330b08b70e61e3e9fd634906b30ae10a87d64736f6c63430008140033",
      "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0xF PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x1AA3 PUSH2 0x31 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xD50 ADD MSTORE PUSH2 0x1AA3 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x151 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xF3945282 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xF964D109 EQ PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xD9158EC8 EQ PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xBDFFD282 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xC370C3C7 EQ PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x124 JUMPI DUP1 PUSH4 0x48F3C51C GT PUSH2 0x109 JUMPI DUP1 PUSH4 0x48F3C51C EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C0 JUMP JUMPDEST PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH32 0x564954414C494B20534543524554000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x175 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x1598 JUMP JUMPDEST PUSH2 0x5E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20B PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x6F9 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST PUSH2 0x263 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xB8 DUP4 SWAP1 SHR AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x997 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH32 0x5654530000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0xA8B JUMP JUMPDEST PUSH2 0x20B PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x1684 JUMP JUMPDEST PUSH2 0xA9A JUMP JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP2 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1B3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078313233343536373839414243444546300000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x169 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x180C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3F6 PUSH2 0x3F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x183F JUMP JUMPDEST PUSH2 0x1B3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078323133343536373839414243444645300000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ DUP1 PUSH2 0x4D2 JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x51E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP1 DUP3 AND EQ PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x38077A2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x5DE JUMPI POP POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 DUP3 SWAP1 SHR AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x38077A2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5A4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x6B0 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x6E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA8E4EB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F3 DUP3 DUP3 DUP7 DUP7 PUSH2 0xF69 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 DUP3 SWAP1 SHR AND PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP1 DUP4 AND EQ PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH32 0x38077A2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5A4 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23295F0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO DUP1 PUSH2 0x84C JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8E4C8AA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND EQ PUSH2 0x95D JUMPI DUP1 DUP1 ISZERO PUSH2 0x8E8 JUMPI POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x926 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA8E4EB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x96F DUP7 DUP7 DUP7 PUSH1 0x18 DUP7 SWAP1 SHR ISZERO ISZERO PUSH2 0x10F2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x992 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x9F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x38077A2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5A4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xA62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8E4C8AA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A4 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA96 CALLER DUP4 DUP4 PUSH2 0x11D5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 DUP3 SWAP1 SHR AND PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP1 DUP4 AND EQ PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x38077A2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5A4 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23295F0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP10 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND ISZERO DUP1 PUSH2 0xBED JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0xC3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8E4C8AA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND EQ PUSH2 0xCFE JUMPI DUP1 DUP1 ISZERO PUSH2 0xC89 JUMPI POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xCC7 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xCFE JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA8E4EB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD11 DUP8 DUP8 DUP8 PUSH1 0x18 DUP7 SWAP1 SHR ISZERO ISZERO DUP9 PUSH2 0x126D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH32 0x3078323133343536373839414243444645300000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE2B JUMPI PUSH1 0x0 PUSH2 0xDAD DUP5 DUP5 DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0xD93 JUMPI PUSH2 0xD93 PUSH2 0x18A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xDA8 SWAP2 SWAP1 PUSH2 0x18D3 JUMP JUMPDEST PUSH2 0x12D9 JUMP JUMPDEST SWAP4 POP SWAP1 POP DUP1 PUSH2 0xE18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F4D4F56450000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A4 JUMP JUMPDEST POP DUP1 PUSH2 0xE23 DUP2 PUSH2 0x1923 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD72 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE4D JUMPI PUSH2 0xE4D PUSH2 0x1655 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE92 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE6B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF62 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xEB7 JUMPI PUSH2 0xEB7 PUSH2 0x18A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xEE2 JUMPI PUSH2 0xEE2 PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0xB8 DUP2 SWAP1 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF41 JUMPI PUSH2 0xF41 PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE POP DUP1 PUSH2 0xF5A DUP2 PUSH2 0x1923 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE98 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x18 DUP4 SWAP1 SHR PUSH1 0x0 PUSH2 0xF7B DUP6 PUSH1 0x1 PUSH2 0x195B JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x18 DUP3 SWAP1 SHR EQ PUSH2 0xFBA JUMPI PUSH1 0x40 MLOAD PUSH32 0xADC1557200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x1007 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA0 DUP3 SWAP1 SHL PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND OR SWAP1 SSTORE PUSH2 0x108F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND PUSH1 0xA0 DUP8 SWAP1 SHL OR PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1173 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 NUMBER PUSH1 0xB8 SHL PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP9 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1279 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0xE2B JUMPI PUSH2 0x12A3 CALLER DUP7 DUP7 DUP7 DUP6 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0xE2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x4E472E5E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x12E8 PUSH1 0x4 DUP7 PUSH2 0x199D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12F7 PUSH1 0x4 DUP8 PUSH2 0x19B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130D JUMPI PUSH2 0x130D PUSH2 0x19C5 JUMP JUMPDEST SUB PUSH2 0x132F JUMPI PUSH2 0x131E PUSH1 0x1 PUSH1 0x4 PUSH2 0x19F4 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x132A JUMPI PUSH1 0x1 SWAP4 POP JUMPDEST PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1343 JUMPI PUSH2 0x1343 PUSH2 0x19C5 JUMP JUMPDEST SUB PUSH2 0x1364 JUMPI PUSH2 0x1354 PUSH1 0x1 PUSH1 0x4 PUSH2 0x19F4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x132A JUMPI PUSH1 0x1 SWAP4 POP PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1378 JUMPI PUSH2 0x1378 PUSH2 0x19C5 JUMP JUMPDEST SUB PUSH2 0x138C JUMPI DUP2 ISZERO PUSH2 0x132A JUMPI PUSH1 0x1 SWAP4 POP PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x3 DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13A0 JUMPI PUSH2 0x13A0 PUSH2 0x19C5 JUMP JUMPDEST SUB PUSH2 0x13B0 JUMPI DUP1 ISZERO PUSH2 0x13B0 JUMPI PUSH1 0x1 SWAP4 POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP9 DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x141B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x14BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14DD DUP2 PUSH2 0x148F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x150A JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x14EE JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14DD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x156D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B4 DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E0 DUP5 PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP PUSH2 0x15EE PUSH1 0x20 DUP6 ADD PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14DD DUP3 PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x162C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1635 DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x164A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x169A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16A3 DUP6 PUSH2 0x1574 JUMP JUMPDEST SWAP4 POP PUSH2 0x16B1 PUSH1 0x20 DUP7 ADD PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x16FB JUMPI PUSH2 0x16FB PUSH2 0x1655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1741 JUMPI PUSH2 0x1741 PUSH2 0x1655 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x175A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x17C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1800 DUP6 DUP3 DUP7 ADD PUSH2 0x177E JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1828 DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH2 0x1836 PUSH1 0x20 DUP5 ADD PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1897 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x185C JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x14DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1954 JUMPI PUSH2 0x1954 PUSH2 0x18F4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x51E JUMPI PUSH2 0x51E PUSH2 0x18F4 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19AC JUMPI PUSH2 0x19AC PUSH2 0x196E JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19C0 JUMPI PUSH2 0x19C0 PUSH2 0x196E JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x51E JUMPI PUSH2 0x51E PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1A46 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x14E4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14DD DUP2 PUSH2 0x148F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xE0 ADD PUSH30 0x728E57D31D65C17E07771330B08B70E61E3E9FD634906B30AE10A87D6473 PUSH16 0x6C634300081400330000000000000000 ",
      "sourceMap": "275:2349:10:-:0;;;682:2;645:39;;275:2349;;;;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@RANDOM_1615": {
          "entryPoint": null,
          "id": 1615,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@SIZE_1609": {
          "entryPoint": null,
          "id": 1609,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@SOLUTION_1612": {
          "entryPoint": null,
          "id": 1612,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_approveFor_789": {
          "entryPoint": 3945,
          "id": 789,
          "parameterSlots": 4,
          "returnSlots": 0
        },
        "@_checkOnERC721Received_849": {
          "entryPoint": 5050,
          "id": 849,
          "parameterSlots": 5,
          "returnSlots": 1
        },
        "@_ownerAndNonceOf_941": {
          "entryPoint": null,
          "id": 941,
          "parameterSlots": 1,
          "returnSlots": 2
        },
        "@_ownerAndOperatorEnabledOf_904": {
          "entryPoint": null,
          "id": 904,
          "parameterSlots": 1,
          "returnSlots": 2
        },
        "@_ownerNonceAndOperatorEnabledOf_988": {
          "entryPoint": null,
          "id": 988,
          "parameterSlots": 1,
          "returnSlots": 3
        },
        "@_ownerOf_868": {
          "entryPoint": null,
          "id": 868,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@_safeTransferFrom_645": {
          "entryPoint": 4717,
          "id": 645,
          "parameterSlots": 5,
          "returnSlots": 0
        },
        "@_setApprovalForAll_815": {
          "entryPoint": 4565,
          "id": 815,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "@_transferFrom_695": {
          "entryPoint": 4338,
          "id": 695,
          "parameterSlots": 4,
          "returnSlots": 0
        },
        "@approve_103": {
          "entryPoint": 1512,
          "id": 103,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@balanceOf_270": {
          "entryPoint": 2555,
          "id": 270,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getApproved_341": {
          "entryPoint": 1316,
          "id": 341,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@isApprovedForAll_359": {
          "entryPoint": null,
          "id": 359,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@isContract_1257": {
          "entryPoint": null,
          "id": 1257,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@name_1776": {
          "entryPoint": null,
          "id": 1776,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@ownerAndLastTransferBlockNumberList_586": {
          "entryPoint": 3634,
          "id": 586,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@ownerAndLastTransferBlockNumberOf_518": {
          "entryPoint": null,
          "id": 518,
          "parameterSlots": 1,
          "returnSlots": 2
        },
        "@ownerOf_298": {
          "entryPoint": 2455,
          "id": 298,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@proposeSolution_1667": {
          "entryPoint": 3354,
          "id": 1667,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@safeTransferFrom_225": {
          "entryPoint": 2423,
          "id": 225,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "@safeTransferFrom_465": {
          "entryPoint": 2714,
          "id": 465,
          "parameterSlots": 4,
          "returnSlots": 0
        },
        "@setApprovalForAll_242": {
          "entryPoint": 2699,
          "id": 242,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@step_1758": {
          "entryPoint": 4825,
          "id": 1758,
          "parameterSlots": 3,
          "returnSlots": 2
        },
        "@supportsInterface_487": {
          "entryPoint": 1087,
          "id": 487,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@symbol_1784": {
          "entryPoint": null,
          "id": 1784,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@tokenURI_1768": {
          "entryPoint": null,
          "id": 1768,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@transferFrom_206": {
          "entryPoint": 1785,
          "id": 206,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "abi_decode_address": {
          "entryPoint": 5492,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_decode_array_enum_Move_dyn_calldata": {
          "entryPoint": 6014,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_address": {
          "entryPoint": 5630,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_addresst_address": {
          "entryPoint": 6156,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_addresst_addresst_uint256": {
          "entryPoint": 5570,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
          "entryPoint": 5764,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 4
        },
        "abi_decode_tuple_t_addresst_bool": {
          "entryPoint": 5657,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_addresst_uint256": {
          "entryPoint": 5528,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_array$_t_enum$_Move_$1606_$dyn_calldata_ptr": {
          "entryPoint": 6090,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_bytes4": {
          "entryPoint": 5312,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bytes4_fromMemory": {
          "entryPoint": 6736,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_enum$_Move_$1606": {
          "entryPoint": 6355,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256": {
          "entryPoint": 5467,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_string": {
          "entryPoint": 5348,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
          "entryPoint": 6663,
          "id": null,
          "parameterSlots": 5,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_array$_t_struct$_OwnerData_$1227_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_OwnerData_$1227_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
          "entryPoint": 6207,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 5448,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_4c8793b114ffcd66e59e0f7719afdf5dce073916b582fd0fea44fea8cfca6ffa__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_add_t_uint256": {
          "entryPoint": 6491,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_div_t_uint256": {
          "entryPoint": 6577,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_sub_t_uint256": {
          "entryPoint": 6644,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "increment_t_uint256": {
          "entryPoint": 6435,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "mod_t_uint256": {
          "entryPoint": 6557,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "panic_error_0x11": {
          "entryPoint": 6388,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x12": {
          "entryPoint": 6510,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x21": {
          "entryPoint": 6597,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x32": {
          "entryPoint": 6308,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x41": {
          "entryPoint": 5717,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "validator_revert_bytes4": {
          "entryPoint": 5263,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:10754:11",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:11",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "58:133:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "169:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "178:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "181:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "171:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "171:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "171:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "81:5:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "92:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "99:66:11",
                                    "type": "",
                                    "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "88:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "88:78:11"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "78:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "78:89:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "71:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "71:97:11"
                      },
                      "nodeType": "YulIf",
                      "src": "68:117:11"
                    }
                  ]
                },
                "name": "validator_revert_bytes4",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "47:5:11",
                    "type": ""
                  }
                ],
                "src": "14:177:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "265:176:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "311:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "320:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "323:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "313:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "313:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "313:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "286:7:11"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "295:9:11"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "282:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "282:23:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "307:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "278:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "278:32:11"
                      },
                      "nodeType": "YulIf",
                      "src": "275:52:11"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "336:36:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "362:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "349:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "349:23:11"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "340:5:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "405:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "381:23:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "381:30:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "381:30:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "420:15:11",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "430:5:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "420:6:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes4",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "231:9:11",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "242:7:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "254:6:11",
                    "type": ""
                  }
                ],
                "src": "196:245:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "541:92:11",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "551:26:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "563:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "574:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "559:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "559:18:11"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "551:4:11"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "593:9:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "618:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "611:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "611:14:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "604:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "604:22:11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "586:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "586:41:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "586:41:11"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "510:9:11",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "521:6:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "532:4:11",
                    "type": ""
                  }
                ],
                "src": "446:187:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "688:432:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "698:26:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "718:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "712:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "712:12:11"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "702:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "740:3:11"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "745:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "733:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "733:19:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "733:19:11"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "761:10:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "770:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "765:1:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "832:110:11",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "846:14:11",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "856:4:11",
                              "type": "",
                              "value": "0x20"
                            },
                            "variables": [
                              {
                                "name": "_1",
                                "nodeType": "YulTypedName",
                                "src": "850:2:11",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "888:3:11"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "893:1:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "884:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "884:11:11"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "897:2:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "880:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "880:20:11"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "value",
                                              "nodeType": "YulIdentifier",
                                              "src": "916:5:11"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "923:1:11"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "912:3:11"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "912:13:11"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "927:2:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "908:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "908:22:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "902:5:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "902:29:11"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "873:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "873:59:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "873:59:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "791:1:11"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "794:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "788:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "788:13:11"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "802:21:11",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "804:17:11",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "813:1:11"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "816:4:11",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "809:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "809:12:11"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "804:1:11"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "784:3:11",
                        "statements": []
                      },
                      "src": "780:162:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "966:3:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "971:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "962:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "962:16:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "980:4:11",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "958:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "958:27:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "987:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "951:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "951:38:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "951:38:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "998:116:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "1013:3:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1026:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1034:2:11",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1022:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1022:15:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1039:66:11",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1018:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1018:88:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1009:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1009:98:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1109:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1005:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1005:109:11"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "998:3:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_string",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "665:5:11",
                    "type": ""
                  },
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "672:3:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "680:3:11",
                    "type": ""
                  }
                ],
                "src": "638:482:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1246:99:11",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1263:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1274:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1256:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1256:21:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1256:21:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1286:53:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1312:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1324:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1335:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1320:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1320:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_string",
                          "nodeType": "YulIdentifier",
                          "src": "1294:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1294:45:11"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1286:4:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1215:9:11",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1226:6:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1237:4:11",
                    "type": ""
                  }
                ],
                "src": "1125:220:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1420:110:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1466:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1475:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1478:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1468:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1468:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1468:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1441:7:11"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1450:9:11"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1437:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1437:23:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1462:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1433:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1433:32:11"
                      },
                      "nodeType": "YulIf",
                      "src": "1430:52:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1491:33:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1514:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1501:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1501:23:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1491:6:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1386:9:11",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1397:7:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1409:6:11",
                    "type": ""
                  }
                ],
                "src": "1350:180:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1636:125:11",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1646:26:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1658:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1669:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1654:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1654:18:11"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1646:4:11"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1688:9:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1703:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1711:42:11",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1699:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1699:55:11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1681:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1681:74:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1681:74:11"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1605:9:11",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1616:6:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1627:4:11",
                    "type": ""
                  }
                ],
                "src": "1535:226:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1815:147:11",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1825:29:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1847:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1834:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1834:20:11"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "1825:5:11"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1940:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1949:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1952:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1942:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1942:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1942:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1876:5:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1887:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1894:42:11",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1883:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1883:54:11"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "1873:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1873:65:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1866:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1866:73:11"
                      },
                      "nodeType": "YulIf",
                      "src": "1863:93:11"
                    }
                  ]
                },
                "name": "abi_decode_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "1794:6:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "1805:5:11",
                    "type": ""
                  }
                ],
                "src": "1766:196:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2054:167:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2100:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2109:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2112:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2102:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2102:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2102:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2075:7:11"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2084:9:11"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2071:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2071:23:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2096:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2067:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2067:32:11"
                      },
                      "nodeType": "YulIf",
                      "src": "2064:52:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2125:39:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2154:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "2135:18:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2135:29:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2125:6:11"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2173:42:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2200:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2211:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2196:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2196:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2183:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2183:32:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2173:6:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2012:9:11",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2023:7:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2035:6:11",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2043:6:11",
                    "type": ""
                  }
                ],
                "src": "1967:254:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2330:224:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2376:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2385:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2388:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2378:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2378:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2378:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2351:7:11"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2360:9:11"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2347:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2347:23:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2372:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2343:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2343:32:11"
                      },
                      "nodeType": "YulIf",
                      "src": "2340:52:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2401:39:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2430:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "2411:18:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2411:29:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2401:6:11"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2449:48:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2482:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2493:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2478:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2478:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "2459:18:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2459:38:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2449:6:11"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2506:42:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2533:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2544:2:11",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2529:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2529:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2516:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2516:32:11"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2506:6:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2280:9:11",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2291:7:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2303:6:11",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2311:6:11",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "2319:6:11",
                    "type": ""
                  }
                ],
                "src": "2226:328:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2688:168:11",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "2698:26:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2710:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2721:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2706:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2706:18:11"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2698:4:11"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2740:9:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2755:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2763:42:11",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2751:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2751:55:11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2733:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2733:74:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2733:74:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2827:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2838:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2823:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2823:18:11"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2843:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2816:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2816:34:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2816:34:11"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2649:9:11",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2660:6:11",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2668:6:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2679:4:11",
                    "type": ""
                  }
                ],
                "src": "2559:297:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2931:116:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2977:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2986:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2989:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2979:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2979:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2979:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2952:7:11"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2961:9:11"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2948:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2948:23:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2973:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2944:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2944:32:11"
                      },
                      "nodeType": "YulIf",
                      "src": "2941:52:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3002:39:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3031:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "3012:18:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3012:29:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3002:6:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2897:9:11",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2908:7:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2920:6:11",
                    "type": ""
                  }
                ],
                "src": "2861:186:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3153:76:11",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3163:26:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3175:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3186:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3171:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3171:18:11"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3163:4:11"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3205:9:11"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3216:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3198:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3198:25:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3198:25:11"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3122:9:11",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3133:6:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3144:4:11",
                    "type": ""
                  }
                ],
                "src": "3052:177:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3318:263:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3364:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3373:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3376:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3366:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3366:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3366:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3339:7:11"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3348:9:11"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3335:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3335:23:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3360:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3331:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3331:32:11"
                      },
                      "nodeType": "YulIf",
                      "src": "3328:52:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3389:39:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3418:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "3399:18:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3399:29:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3389:6:11"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3437:45:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3467:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3478:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3463:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3463:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3450:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3450:32:11"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "3441:5:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3535:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3544:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3547:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3537:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3537:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3537:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3504:5:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3525:5:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "3518:6:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3518:13:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3511:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3511:21:11"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "3501:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3501:32:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3494:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3494:40:11"
                      },
                      "nodeType": "YulIf",
                      "src": "3491:60:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3560:15:11",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3570:5:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3560:6:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_bool",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3276:9:11",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "3287:7:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3299:6:11",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "3307:6:11",
                    "type": ""
                  }
                ],
                "src": "3234:347:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3618:152:11",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3635:1:11",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3638:77:11",
                            "type": "",
                            "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3628:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3628:88:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3628:88:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3732:1:11",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3735:4:11",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3725:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3725:15:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3725:15:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3756:1:11",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3759:4:11",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "3749:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3749:15:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3749:15:11"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "3586:184:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3905:1067:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3952:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3961:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3964:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3954:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3954:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3954:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3926:7:11"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3935:9:11"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3922:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3922:23:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3947:3:11",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3918:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3918:33:11"
                      },
                      "nodeType": "YulIf",
                      "src": "3915:53:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3977:39:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4006:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "3987:18:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3987:29:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3977:6:11"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4025:48:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4058:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4069:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4054:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4054:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "4035:18:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4035:38:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4025:6:11"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4082:42:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4109:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4120:2:11",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4105:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4105:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4092:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4092:32:11"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4082:6:11"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4133:46:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4164:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4175:2:11",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4160:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4160:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4147:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4147:32:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4137:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4188:28:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4198:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "4192:2:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4243:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4252:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4255:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4245:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4245:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4245:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4231:6:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4239:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4228:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4228:14:11"
                      },
                      "nodeType": "YulIf",
                      "src": "4225:34:11"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4268:32:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4282:9:11"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4293:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4278:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4278:22:11"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "4272:2:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4348:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4357:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4360:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4350:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4350:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4350:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4327:2:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4331:4:11",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4323:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4323:13:11"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "4338:7:11"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "4319:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4319:27:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4312:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4312:35:11"
                      },
                      "nodeType": "YulIf",
                      "src": "4309:55:11"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4373:26:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "4396:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4383:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4383:16:11"
                      },
                      "variables": [
                        {
                          "name": "_3",
                          "nodeType": "YulTypedName",
                          "src": "4377:2:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4422:22:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "4424:16:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4424:18:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4424:18:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "4414:2:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4418:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4411:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4411:10:11"
                      },
                      "nodeType": "YulIf",
                      "src": "4408:36:11"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4453:76:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4463:66:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                      },
                      "variables": [
                        {
                          "name": "_4",
                          "nodeType": "YulTypedName",
                          "src": "4457:2:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4538:23:11",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4558:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4552:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4552:9:11"
                      },
                      "variables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "4542:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4570:71:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4592:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "4616:2:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4620:4:11",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4612:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4612:13:11"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "4627:2:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4608:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4608:22:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4632:2:11",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4604:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4604:31:11"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "4637:2:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4600:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4600:40:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4588:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4588:53:11"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "4574:10:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4700:22:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "4702:16:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4702:18:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4702:18:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "4659:10:11"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4671:2:11"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "4656:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4656:18:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "4679:10:11"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "4691:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "4676:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4676:22:11"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "4653:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4653:46:11"
                      },
                      "nodeType": "YulIf",
                      "src": "4650:72:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4738:2:11",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4742:10:11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4731:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4731:22:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4731:22:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4769:6:11"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "4777:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4762:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4762:18:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4762:18:11"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4826:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4835:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4838:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4828:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4828:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4828:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4803:2:11"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "4807:2:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4799:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4799:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4812:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4795:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4795:20:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4817:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4792:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4792:33:11"
                      },
                      "nodeType": "YulIf",
                      "src": "4789:53:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "4868:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4876:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4864:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4864:15:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "4885:2:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4889:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4881:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4881:11:11"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "4894:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "4851:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4851:46:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4851:46:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4921:6:11"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "4929:2:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4917:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4917:15:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4934:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4913:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4913:24:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4939:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4906:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4906:35:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4906:35:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4950:16:11",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "4960:6:11"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "4950:6:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3847:9:11",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "3858:7:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3870:6:11",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "3878:6:11",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "3886:6:11",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "3894:6:11",
                    "type": ""
                  }
                ],
                "src": "3775:1197:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5063:283:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5112:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5121:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5124:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5114:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5114:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5114:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5091:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5099:4:11",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5087:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5087:17:11"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "5106:3:11"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "5083:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5083:27:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5076:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5076:35:11"
                      },
                      "nodeType": "YulIf",
                      "src": "5073:55:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5137:30:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5160:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5147:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5147:20:11"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "5137:6:11"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5210:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5219:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5222:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5212:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5212:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5212:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5182:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5190:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5179:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5179:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "5176:50:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5235:29:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5251:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5259:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5247:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5247:17:11"
                      },
                      "variableNames": [
                        {
                          "name": "arrayPos",
                          "nodeType": "YulIdentifier",
                          "src": "5235:8:11"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5324:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5333:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5336:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5326:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5326:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5326:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5287:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5299:1:11",
                                        "type": "",
                                        "value": "5"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "5302:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5295:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5295:14:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5283:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5283:27:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5312:4:11",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5279:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5279:38:11"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "5319:3:11"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5276:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5276:47:11"
                      },
                      "nodeType": "YulIf",
                      "src": "5273:67:11"
                    }
                  ]
                },
                "name": "abi_decode_array_enum_Move_dyn_calldata",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "5026:6:11",
                    "type": ""
                  },
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "5034:3:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "arrayPos",
                    "nodeType": "YulTypedName",
                    "src": "5042:8:11",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "5052:6:11",
                    "type": ""
                  }
                ],
                "src": "4977:369:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5465:334:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5511:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5520:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5523:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5513:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5513:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5513:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "5486:7:11"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5495:9:11"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5482:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5482:23:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5507:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "5478:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5478:32:11"
                      },
                      "nodeType": "YulIf",
                      "src": "5475:52:11"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5536:37:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5563:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5550:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5550:23:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5540:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5616:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5625:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5628:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5618:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5618:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5618:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5588:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5596:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5585:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5585:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "5582:50:11"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5641:98:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5711:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5722:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5707:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5707:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5731:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_enum_Move_dyn_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "5667:39:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5667:72:11"
                      },
                      "variables": [
                        {
                          "name": "value0_1",
                          "nodeType": "YulTypedName",
                          "src": "5645:8:11",
                          "type": ""
                        },
                        {
                          "name": "value1_1",
                          "nodeType": "YulTypedName",
                          "src": "5655:8:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5748:18:11",
                      "value": {
                        "name": "value0_1",
                        "nodeType": "YulIdentifier",
                        "src": "5758:8:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5748:6:11"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5775:18:11",
                      "value": {
                        "name": "value1_1",
                        "nodeType": "YulIdentifier",
                        "src": "5785:8:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5775:6:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_array$_t_enum$_Move_$1606_$dyn_calldata_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5423:9:11",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "5434:7:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5446:6:11",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "5454:6:11",
                    "type": ""
                  }
                ],
                "src": "5351:448:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5923:99:11",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5940:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5951:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5933:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5933:21:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5933:21:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5963:53:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5989:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6001:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6012:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5997:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5997:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_string",
                          "nodeType": "YulIdentifier",
                          "src": "5971:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5971:45:11"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5963:4:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5892:9:11",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5903:6:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5914:4:11",
                    "type": ""
                  }
                ],
                "src": "5804:218:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6114:173:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6160:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6169:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6172:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6162:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6162:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6162:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "6135:7:11"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6144:9:11"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6131:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6131:23:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6156:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "6127:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6127:32:11"
                      },
                      "nodeType": "YulIf",
                      "src": "6124:52:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6185:39:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6214:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "6195:18:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6195:29:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6185:6:11"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6233:48:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6266:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6277:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6262:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6262:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "6243:18:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6243:38:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6233:6:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6072:9:11",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "6083:7:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6095:6:11",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "6103:6:11",
                    "type": ""
                  }
                ],
                "src": "6027:260:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6397:334:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6443:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6452:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6455:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6445:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6445:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6445:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "6418:7:11"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6427:9:11"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6414:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6414:23:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6439:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "6410:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6410:32:11"
                      },
                      "nodeType": "YulIf",
                      "src": "6407:52:11"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6468:37:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6495:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6482:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6482:23:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6472:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6548:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6557:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6560:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6550:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6550:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6550:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "6520:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6528:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6517:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6517:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "6514:50:11"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6573:98:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6643:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6654:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6639:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6639:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6663:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_enum_Move_dyn_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "6599:39:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6599:72:11"
                      },
                      "variables": [
                        {
                          "name": "value0_1",
                          "nodeType": "YulTypedName",
                          "src": "6577:8:11",
                          "type": ""
                        },
                        {
                          "name": "value1_1",
                          "nodeType": "YulTypedName",
                          "src": "6587:8:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6680:18:11",
                      "value": {
                        "name": "value0_1",
                        "nodeType": "YulIdentifier",
                        "src": "6690:8:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6680:6:11"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6707:18:11",
                      "value": {
                        "name": "value1_1",
                        "nodeType": "YulIdentifier",
                        "src": "6717:8:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6707:6:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6355:9:11",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "6366:7:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6378:6:11",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "6386:6:11",
                    "type": ""
                  }
                ],
                "src": "6292:439:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6941:636:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6951:12:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6961:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "6955:2:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6972:32:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6990:9:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7001:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6986:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6986:18:11"
                      },
                      "variables": [
                        {
                          "name": "tail_1",
                          "nodeType": "YulTypedName",
                          "src": "6976:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7020:9:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7031:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7013:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7013:21:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7013:21:11"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7043:17:11",
                      "value": {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "7054:6:11"
                      },
                      "variables": [
                        {
                          "name": "pos",
                          "nodeType": "YulTypedName",
                          "src": "7047:3:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7069:27:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7089:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7083:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7083:13:11"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "7073:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "7112:6:11"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7120:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7105:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7105:22:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7105:22:11"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7136:12:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7146:2:11",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "7140:2:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7157:25:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7168:9:11"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "7179:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7164:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7164:18:11"
                      },
                      "variableNames": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "7157:3:11"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7191:29:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7209:6:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7217:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7205:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7205:15:11"
                      },
                      "variables": [
                        {
                          "name": "srcPtr",
                          "nodeType": "YulTypedName",
                          "src": "7195:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7229:10:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7238:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "7233:1:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7297:254:11",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "7311:23:11",
                            "value": {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7327:6:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7321:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7321:13:11"
                            },
                            "variables": [
                              {
                                "name": "_3",
                                "nodeType": "YulTypedName",
                                "src": "7315:2:11",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7354:3:11"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "7369:2:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "7363:5:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7363:9:11"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7374:42:11",
                                      "type": "",
                                      "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "7359:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7359:58:11"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7347:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7347:71:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7347:71:11"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "7442:3:11"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "7447:2:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7438:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7438:12:11"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "7462:2:11"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "7466:2:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7458:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7458:11:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "7452:5:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7452:18:11"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7431:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7431:40:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7431:40:11"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "7484:19:11",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7495:3:11"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "7500:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7491:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7491:12:11"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7484:3:11"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "7516:25:11",
                            "value": {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7530:6:11"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "7538:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7526:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7526:15:11"
                            },
                            "variableNames": [
                              {
                                "name": "srcPtr",
                                "nodeType": "YulIdentifier",
                                "src": "7516:6:11"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7259:1:11"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7262:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7256:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7256:13:11"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "7270:18:11",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "7272:14:11",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7281:1:11"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7284:1:11",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7277:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7277:9:11"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "7272:1:11"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "7252:3:11",
                        "statements": []
                      },
                      "src": "7248:303:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7560:11:11",
                      "value": {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7568:3:11"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7560:4:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_array$_t_struct$_OwnerData_$1227_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_OwnerData_$1227_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6910:9:11",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6921:6:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6932:4:11",
                    "type": ""
                  }
                ],
                "src": "6736:841:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7711:198:11",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "7721:26:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7733:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7744:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7729:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7729:18:11"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7721:4:11"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7756:52:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7766:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "7760:2:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7824:9:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "7839:6:11"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "7847:2:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7835:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7835:15:11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7817:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7817:34:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7817:34:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7871:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7882:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7867:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7867:18:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "7891:6:11"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "7899:2:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7887:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7887:15:11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7860:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7860:43:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7860:43:11"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7672:9:11",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "7683:6:11",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "7691:6:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7702:4:11",
                    "type": ""
                  }
                ],
                "src": "7582:327:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7946:152:11",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7963:1:11",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7966:77:11",
                            "type": "",
                            "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7956:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7956:88:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7956:88:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8060:1:11",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8063:4:11",
                            "type": "",
                            "value": "0x32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8053:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8053:15:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8053:15:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8084:1:11",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8087:4:11",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "8077:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8077:15:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8077:15:11"
                    }
                  ]
                },
                "name": "panic_error_0x32",
                "nodeType": "YulFunctionDefinition",
                "src": "7914:184:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8182:186:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8228:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8237:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8240:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8230:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8230:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8230:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "8203:7:11"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8212:9:11"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8199:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8199:23:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8224:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "8195:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8195:32:11"
                      },
                      "nodeType": "YulIf",
                      "src": "8192:52:11"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8253:36:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8279:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8266:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8266:23:11"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "8257:5:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8322:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8331:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8334:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "8324:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8324:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8324:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8311:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8318:1:11",
                                "type": "",
                                "value": "4"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "8308:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8308:12:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8301:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8301:20:11"
                      },
                      "nodeType": "YulIf",
                      "src": "8298:40:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8347:15:11",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8357:5:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8347:6:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_enum$_Move_$1606",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8148:9:11",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "8159:7:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "8171:6:11",
                    "type": ""
                  }
                ],
                "src": "8103:265:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8547:162:11",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8564:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8575:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8557:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8557:21:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8557:21:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8598:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8609:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8594:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8594:18:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8614:2:11",
                            "type": "",
                            "value": "12"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8587:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8587:30:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8587:30:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8637:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8648:2:11",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8633:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8633:18:11"
                          },
                          {
                            "hexValue": "494e56414c49445f4d4f5645",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8653:14:11",
                            "type": "",
                            "value": "INVALID_MOVE"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8626:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8626:42:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8626:42:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8677:26:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8689:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8700:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8685:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8685:18:11"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8677:4:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_4c8793b114ffcd66e59e0f7719afdf5dce073916b582fd0fea44fea8cfca6ffa__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8524:9:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "8538:4:11",
                    "type": ""
                  }
                ],
                "src": "8373:336:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8746:152:11",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8763:1:11",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8766:77:11",
                            "type": "",
                            "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8756:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8756:88:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8756:88:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8860:1:11",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8863:4:11",
                            "type": "",
                            "value": "0x11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8853:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8853:15:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8853:15:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8884:1:11",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8887:4:11",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "8877:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8877:15:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8877:15:11"
                    }
                  ]
                },
                "name": "panic_error_0x11",
                "nodeType": "YulFunctionDefinition",
                "src": "8714:184:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8950:148:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9041:22:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "9043:16:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9043:18:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9043:18:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8966:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8973:66:11",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8963:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8963:77:11"
                      },
                      "nodeType": "YulIf",
                      "src": "8960:103:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9072:20:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9083:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9090:1:11",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9079:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9079:13:11"
                      },
                      "variableNames": [
                        {
                          "name": "ret",
                          "nodeType": "YulIdentifier",
                          "src": "9072:3:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "increment_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "8932:5:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "ret",
                    "nodeType": "YulTypedName",
                    "src": "8942:3:11",
                    "type": ""
                  }
                ],
                "src": "8903:195:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9151:77:11",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "9161:16:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "9172:1:11"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9175:1:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9168:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9168:9:11"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "9161:3:11"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9200:22:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "9202:16:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9202:18:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9202:18:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "9192:1:11"
                          },
                          {
                            "name": "sum",
                            "nodeType": "YulIdentifier",
                            "src": "9195:3:11"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9189:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9189:10:11"
                      },
                      "nodeType": "YulIf",
                      "src": "9186:36:11"
                    }
                  ]
                },
                "name": "checked_add_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "9134:1:11",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "9137:1:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "9143:3:11",
                    "type": ""
                  }
                ],
                "src": "9103:125:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9265:152:11",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9282:1:11",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9285:77:11",
                            "type": "",
                            "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9275:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9275:88:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9275:88:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9379:1:11",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9382:4:11",
                            "type": "",
                            "value": "0x12"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9372:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9372:15:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9372:15:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9403:1:11",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9406:4:11",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "9396:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9396:15:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9396:15:11"
                    }
                  ]
                },
                "name": "panic_error_0x12",
                "nodeType": "YulFunctionDefinition",
                "src": "9233:184:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9460:74:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9483:22:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x12",
                                "nodeType": "YulIdentifier",
                                "src": "9485:16:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9485:18:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9485:18:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9480:1:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9473:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9473:9:11"
                      },
                      "nodeType": "YulIf",
                      "src": "9470:35:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9514:14:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "9523:1:11"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9526:1:11"
                          }
                        ],
                        "functionName": {
                          "name": "mod",
                          "nodeType": "YulIdentifier",
                          "src": "9519:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9519:9:11"
                      },
                      "variableNames": [
                        {
                          "name": "r",
                          "nodeType": "YulIdentifier",
                          "src": "9514:1:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "mod_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "9445:1:11",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "9448:1:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "r",
                    "nodeType": "YulTypedName",
                    "src": "9454:1:11",
                    "type": ""
                  }
                ],
                "src": "9422:112:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9585:74:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9608:22:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x12",
                                "nodeType": "YulIdentifier",
                                "src": "9610:16:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9610:18:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9610:18:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9605:1:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9598:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9598:9:11"
                      },
                      "nodeType": "YulIf",
                      "src": "9595:35:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9639:14:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "9648:1:11"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9651:1:11"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "9644:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9644:9:11"
                      },
                      "variableNames": [
                        {
                          "name": "r",
                          "nodeType": "YulIdentifier",
                          "src": "9639:1:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_div_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "9570:1:11",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "9573:1:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "r",
                    "nodeType": "YulTypedName",
                    "src": "9579:1:11",
                    "type": ""
                  }
                ],
                "src": "9539:120:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9696:152:11",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9713:1:11",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9716:77:11",
                            "type": "",
                            "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9706:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9706:88:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9706:88:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9810:1:11",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9813:4:11",
                            "type": "",
                            "value": "0x21"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9803:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9803:15:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9803:15:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9834:1:11",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9837:4:11",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "9827:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9827:15:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9827:15:11"
                    }
                  ]
                },
                "name": "panic_error_0x21",
                "nodeType": "YulFunctionDefinition",
                "src": "9664:184:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9902:79:11",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "9912:17:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "9924:1:11"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9927:1:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9920:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9920:9:11"
                      },
                      "variableNames": [
                        {
                          "name": "diff",
                          "nodeType": "YulIdentifier",
                          "src": "9912:4:11"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9953:22:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "9955:16:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9955:18:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9955:18:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "diff",
                            "nodeType": "YulIdentifier",
                            "src": "9944:4:11"
                          },
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "9950:1:11"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9941:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9941:11:11"
                      },
                      "nodeType": "YulIf",
                      "src": "9938:37:11"
                    }
                  ]
                },
                "name": "checked_sub_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "9884:1:11",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "9887:1:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "diff",
                    "nodeType": "YulTypedName",
                    "src": "9893:4:11",
                    "type": ""
                  }
                ],
                "src": "9853:128:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10189:309:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10199:52:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10209:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "10203:2:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10267:9:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "10282:6:11"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "10290:2:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "10278:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10278:15:11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10260:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10260:34:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10260:34:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10314:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10325:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10310:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10310:18:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "10334:6:11"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "10342:2:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "10330:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10330:15:11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10303:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10303:43:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10303:43:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10366:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10377:2:11",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10362:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10362:18:11"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "10382:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10355:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10355:34:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10355:34:11"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10409:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10420:2:11",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10405:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10405:18:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10425:3:11",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10398:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10398:31:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10398:31:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10438:54:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "10464:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10476:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10487:3:11",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10472:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10472:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_string",
                          "nodeType": "YulIdentifier",
                          "src": "10446:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10446:46:11"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "10438:4:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "10134:9:11",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "10145:6:11",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "10153:6:11",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "10161:6:11",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "10169:6:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "10180:4:11",
                    "type": ""
                  }
                ],
                "src": "9986:512:11"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10583:169:11",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10629:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10638:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10641:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "10631:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10631:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10631:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "10604:7:11"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10613:9:11"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "10600:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10600:23:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10625:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "10596:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10596:32:11"
                      },
                      "nodeType": "YulIf",
                      "src": "10593:52:11"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10654:29:11",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10673:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10667:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10667:16:11"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "10658:5:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10716:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "10692:23:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10692:30:11"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10692:30:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10731:15:11",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10741:5:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10731:6:11"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes4_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "10549:9:11",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "10560:7:11",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "10572:6:11",
                    "type": ""
                  }
                ],
                "src": "10503:249:11"
              }
            ]
          },
          "contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_array_enum_Move_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_enum$_Move_$1606_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_enum_Move_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_enum_Move_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_encode_tuple_t_array$_t_struct$_OwnerData_$1227_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_OwnerData_$1227_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), 0xffffffffffffffffffffffffffffffffffffffff))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_enum$_Move_$1606(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 4)) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_4c8793b114ffcd66e59e0f7719afdf5dce073916b582fd0fea44fea8cfca6ffa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"INVALID_MOVE\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
          "id": 11,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {
        "1618": [
          {
            "length": 32,
            "start": 3408
          }
        ]
      },
      "linkReferences": {},
      "object": "608060405234801561001057600080fd5b50600436106101515760003560e01c806395d89b41116100cd578063c87b56dd11610081578063e985e9c511610066578063e985e9c51461039a578063f3945282146103e3578063f964d1091461040357600080fd5b8063c87b56dd1461033d578063d9158ec81461035e57600080fd5b8063b88d4fde116100b2578063b88d4fde1461030f578063bdffd28214610322578063c370c3c71461032a57600080fd5b806395d89b41146102c3578063a22cb465146102fc57600080fd5b806323b872dd1161012457806348f3c51c1161010957806348f3c51c146102335780636352211e1461028f57806370a08231146102a257600080fd5b806323b872dd1461020d57806342842e0e1461022057600080fd5b806301ffc9a71461015657806306fdde031461017e578063081812fc146101c0578063095ea7b3146101f8575b600080fd5b6101696101643660046114c0565b61043f565b60405190151581526020015b60405180910390f35b60408051808201909152600e81527f564954414c494b2053454352455400000000000000000000000000000000000060208201525b6040516101759190611548565b6101d36101ce36600461155b565b610524565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610175565b61020b610206366004611598565b6105e8565b005b61020b61021b3660046115c2565b6106f9565b61020b61022e3660046115c2565b610977565b61026361024136600461155b565b6000908152602081905260409020549067ffffffffffffffff60b883901c1690565b6040805173ffffffffffffffffffffffffffffffffffffffff9093168352602083019190915201610175565b6101d361029d36600461155b565b610997565b6102b56102b03660046115fe565b6109fb565b604051908152602001610175565b60408051808201909152600381527f565453000000000000000000000000000000000000000000000000000000000060208201526101b3565b61020b61030a366004611619565b610a8b565b61020b61031d366004611684565b610a9a565b6102b5600481565b61020b6103383660046117ca565b610d1a565b6101b361034b36600461155b565b5060408051602081019091526000815290565b6101b36040518060400160405280601281526020017f307831323334353637383941424344454630000000000000000000000000000081525081565b6101696103a836600461180c565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291909152205460ff1690565b6103f66103f13660046117ca565b610e32565b604051610175919061183f565b6101b36040518060400160405280601281526020017f307832313334353637383941424344464530000000000000000000000000000081525081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614806104d257507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b8061051e57507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6000818152602081905260408120547f80000000000000000000000000000000000000000000000000000000000000008082161473ffffffffffffffffffffffffffffffffffffffff82166105ad576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018590526024015b60405180910390fd5b80156105de5750505060009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b5060009392505050565b6000818152602081905260409020546affffffffffffffffffffff60a082901c1673ffffffffffffffffffffffffffffffffffffffff8216610659576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018490526024016105a4565b3373ffffffffffffffffffffffffffffffffffffffff8316148015906106b0575073ffffffffffffffffffffffffffffffffffffffff8216600090815260026020908152604080832033845290915290205460ff16155b156106e7576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106f382828686610f69565b50505050565b6000818152602081905260409020546affffffffffffffffffffff60a082901c167f80000000000000000000000000000000000000000000000000000000000000008083161473ffffffffffffffffffffffffffffffffffffffff831661078f576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018590526024016105a4565b8273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614610814576040517f23295f0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8088166004830152841660248201526044016105a4565b73ffffffffffffffffffffffffffffffffffffffff8516158061084c575073ffffffffffffffffffffffffffffffffffffffff851630145b1561089b576040517f8e4c8aa600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff861660048201526024016105a4565b3373ffffffffffffffffffffffffffffffffffffffff87161461095d578080156108e8575060008481526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b158015610926575073ffffffffffffffffffffffffffffffffffffffff8616600090815260026020908152604080832033845290915290205460ff16155b1561095d576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61096f868686601886901c15156110f2565b505050505050565b61099283838360405180602001604052806000815250610a9a565b505050565b60008181526020819052604090205473ffffffffffffffffffffffffffffffffffffffff81166109f6576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018390526024016105a4565b919050565b600073ffffffffffffffffffffffffffffffffffffffff8216610a62576040517f8e4c8aa600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024016105a4565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b610a963383836111d5565b5050565b6000828152602081905260409020546affffffffffffffffffffff60a082901c167f80000000000000000000000000000000000000000000000000000000000000008083161473ffffffffffffffffffffffffffffffffffffffff8316610b30576040517f38077a2b000000000000000000000000000000000000000000000000000000008152600481018690526024016105a4565b8673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610bb5576040517f23295f0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8089166004830152841660248201526044016105a4565b73ffffffffffffffffffffffffffffffffffffffff86161580610bed575073ffffffffffffffffffffffffffffffffffffffff861630145b15610c3c576040517f8e4c8aa600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff871660048201526024016105a4565b3373ffffffffffffffffffffffffffffffffffffffff881614610cfe57808015610c89575060008581526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b158015610cc7575073ffffffffffffffffffffffffffffffffffffffff8716600090815260026020908152604080832033845290915290205460ff16155b15610cfe576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d11878787601886901c15158861126d565b50505050505050565b60408051808201909152601281527f307832313334353637383941424344464530000000000000000000000000000060208201527f000000000000000000000000000000000000000000000000000000000000000060005b83811015610e2b576000610dad8484888886818110610d9357610d936118a4565b9050602002016020810190610da891906118d3565b6112d9565b9350905080610e18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f494e56414c49445f4d4f5645000000000000000000000000000000000000000060448201526064016105a4565b5080610e2381611923565b915050610d72565b5050505050565b60608167ffffffffffffffff811115610e4d57610e4d611655565b604051908082528060200260200182016040528015610e9257816020015b6040805180820190915260008082526020820152815260200190600190039081610e6b5790505b50905060005b82811015610f62576000806000868685818110610eb757610eb76118a4565b90506020020135815260200190815260200160002054905080838381518110610ee257610ee26118a4565b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060b881901c67ffffffffffffffff16838381518110610f4157610f416118a4565b60209081029190910181015101525080610f5a81611923565b915050610e98565b5092915050565b601883901c6000610f7b85600161195b565b905081601882901c14610fba576040517fadc1557200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841661100757600083815260208190526040902060a082901b73ffffffffffffffffffffffffffffffffffffffff881617905561108f565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8a811660a087901b177f800000000000000000000000000000000000000000000000000000000000000017909155600390925290912080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169186169190911790555b828473ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602081905260409091208054909101905580156111735773ffffffffffffffffffffffffffffffffffffffff8416600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190555b6000828152602081905260408082204360b81b73ffffffffffffffffffffffffffffffffffffffff80881691821790925591518593918816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a450505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611279858585856110f2565b73ffffffffffffffffffffffffffffffffffffffff84163b15610e2b576112a333868686856113ba565b610e2b576040517f4e472e5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080806112e860048661199d565b905060006112f76004876119b1565b9050600085600381111561130d5761130d6119c5565b0361132f5761131e600160046119f4565b82101561132a57600193505b6113b0565b6001856003811115611343576113436119c5565b0361136457611354600160046119f4565b81101561132a57600193506113b0565b6002856003811115611378576113786119c5565b0361138c57811561132a57600193506113b0565b60038560038111156113a0576113a06119c5565b036113b05780156113b057600193505b5050935093915050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663150b7a02888887876040518563ffffffff1660e01b81526004016113fc9493929190611a07565b6020604051808303816000875af115801561141b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143f9190611a50565b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001491505095945050505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146114bd57600080fd5b50565b6000602082840312156114d257600080fd5b81356114dd8161148f565b9392505050565b6000815180845260005b8181101561150a576020818501810151868301820152016114ee565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006114dd60208301846114e4565b60006020828403121561156d57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109f657600080fd5b600080604083850312156115ab57600080fd5b6115b483611574565b946020939093013593505050565b6000806000606084860312156115d757600080fd5b6115e084611574565b92506115ee60208501611574565b9150604084013590509250925092565b60006020828403121561161057600080fd5b6114dd82611574565b6000806040838503121561162c57600080fd5b61163583611574565b91506020830135801515811461164a57600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561169a57600080fd5b6116a385611574565b93506116b160208601611574565b925060408501359150606085013567ffffffffffffffff808211156116d557600080fd5b818701915087601f8301126116e957600080fd5b8135818111156116fb576116fb611655565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561174157611741611655565b816040528281528a602084870101111561175a57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008083601f84011261179057600080fd5b50813567ffffffffffffffff8111156117a857600080fd5b6020830191508360208260051b85010111156117c357600080fd5b9250929050565b600080602083850312156117dd57600080fd5b823567ffffffffffffffff8111156117f457600080fd5b6118008582860161177e565b90969095509350505050565b6000806040838503121561181f57600080fd5b61182883611574565b915061183660208401611574565b90509250929050565b602080825282518282018190526000919060409081850190868401855b82811015611897578151805173ffffffffffffffffffffffffffffffffffffffff16855286015186850152928401929085019060010161185c565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156118e557600080fd5b8135600481106114dd57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611954576119546118f4565b5060010190565b8082018082111561051e5761051e6118f4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826119ac576119ac61196e565b500690565b6000826119c0576119c061196e565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8181038181111561051e5761051e6118f4565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611a4660808301846114e4565b9695505050505050565b600060208284031215611a6257600080fd5b81516114dd8161148f56fea264697066735822122012e0017d728e57d31d65c17e07771330b08b70e61e3e9fd634906b30ae10a87d64736f6c63430008140033",
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x151 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xF3945282 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xF964D109 EQ PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xD9158EC8 EQ PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xBDFFD282 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xC370C3C7 EQ PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x124 JUMPI DUP1 PUSH4 0x48F3C51C GT PUSH2 0x109 JUMPI DUP1 PUSH4 0x48F3C51C EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C0 JUMP JUMPDEST PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH32 0x564954414C494B20534543524554000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x175 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x1598 JUMP JUMPDEST PUSH2 0x5E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20B PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x6F9 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST PUSH2 0x263 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xB8 DUP4 SWAP1 SHR AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x997 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH32 0x5654530000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0xA8B JUMP JUMPDEST PUSH2 0x20B PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x1684 JUMP JUMPDEST PUSH2 0xA9A JUMP JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP2 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1B3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078313233343536373839414243444546300000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x169 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x180C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3F6 PUSH2 0x3F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x183F JUMP JUMPDEST PUSH2 0x1B3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078323133343536373839414243444645300000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ DUP1 PUSH2 0x4D2 JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x51E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP1 DUP3 AND EQ PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x38077A2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x5DE JUMPI POP POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 DUP3 SWAP1 SHR AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x38077A2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5A4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x6B0 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x6E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA8E4EB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F3 DUP3 DUP3 DUP7 DUP7 PUSH2 0xF69 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 DUP3 SWAP1 SHR AND PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP1 DUP4 AND EQ PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH32 0x38077A2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5A4 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23295F0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ISZERO DUP1 PUSH2 0x84C JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8E4C8AA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND EQ PUSH2 0x95D JUMPI DUP1 DUP1 ISZERO PUSH2 0x8E8 JUMPI POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x926 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA8E4EB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x96F DUP7 DUP7 DUP7 PUSH1 0x18 DUP7 SWAP1 SHR ISZERO ISZERO PUSH2 0x10F2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x992 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x9F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x38077A2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5A4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xA62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8E4C8AA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A4 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA96 CALLER DUP4 DUP4 PUSH2 0x11D5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 DUP3 SWAP1 SHR AND PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP1 DUP4 AND EQ PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x38077A2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5A4 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23295F0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP10 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND ISZERO DUP1 PUSH2 0xBED JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0xC3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8E4C8AA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND EQ PUSH2 0xCFE JUMPI DUP1 DUP1 ISZERO PUSH2 0xC89 JUMPI POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xCC7 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xCFE JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA8E4EB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD11 DUP8 DUP8 DUP8 PUSH1 0x18 DUP7 SWAP1 SHR ISZERO ISZERO DUP9 PUSH2 0x126D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH32 0x3078323133343536373839414243444645300000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE2B JUMPI PUSH1 0x0 PUSH2 0xDAD DUP5 DUP5 DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0xD93 JUMPI PUSH2 0xD93 PUSH2 0x18A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xDA8 SWAP2 SWAP1 PUSH2 0x18D3 JUMP JUMPDEST PUSH2 0x12D9 JUMP JUMPDEST SWAP4 POP SWAP1 POP DUP1 PUSH2 0xE18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F4D4F56450000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A4 JUMP JUMPDEST POP DUP1 PUSH2 0xE23 DUP2 PUSH2 0x1923 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD72 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE4D JUMPI PUSH2 0xE4D PUSH2 0x1655 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE92 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE6B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF62 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xEB7 JUMPI PUSH2 0xEB7 PUSH2 0x18A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xEE2 JUMPI PUSH2 0xEE2 PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0xB8 DUP2 SWAP1 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF41 JUMPI PUSH2 0xF41 PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE POP DUP1 PUSH2 0xF5A DUP2 PUSH2 0x1923 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE98 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x18 DUP4 SWAP1 SHR PUSH1 0x0 PUSH2 0xF7B DUP6 PUSH1 0x1 PUSH2 0x195B JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x18 DUP3 SWAP1 SHR EQ PUSH2 0xFBA JUMPI PUSH1 0x40 MLOAD PUSH32 0xADC1557200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x1007 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA0 DUP3 SWAP1 SHL PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND OR SWAP1 SSTORE PUSH2 0x108F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND PUSH1 0xA0 DUP8 SWAP1 SHL OR PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1173 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 NUMBER PUSH1 0xB8 SHL PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP9 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1279 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0xE2B JUMPI PUSH2 0x12A3 CALLER DUP7 DUP7 DUP7 DUP6 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0xE2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x4E472E5E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x12E8 PUSH1 0x4 DUP7 PUSH2 0x199D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12F7 PUSH1 0x4 DUP8 PUSH2 0x19B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130D JUMPI PUSH2 0x130D PUSH2 0x19C5 JUMP JUMPDEST SUB PUSH2 0x132F JUMPI PUSH2 0x131E PUSH1 0x1 PUSH1 0x4 PUSH2 0x19F4 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x132A JUMPI PUSH1 0x1 SWAP4 POP JUMPDEST PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1343 JUMPI PUSH2 0x1343 PUSH2 0x19C5 JUMP JUMPDEST SUB PUSH2 0x1364 JUMPI PUSH2 0x1354 PUSH1 0x1 PUSH1 0x4 PUSH2 0x19F4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x132A JUMPI PUSH1 0x1 SWAP4 POP PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1378 JUMPI PUSH2 0x1378 PUSH2 0x19C5 JUMP JUMPDEST SUB PUSH2 0x138C JUMPI DUP2 ISZERO PUSH2 0x132A JUMPI PUSH1 0x1 SWAP4 POP PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x3 DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13A0 JUMPI PUSH2 0x13A0 PUSH2 0x19C5 JUMP JUMPDEST SUB PUSH2 0x13B0 JUMPI DUP1 ISZERO PUSH2 0x13B0 JUMPI PUSH1 0x1 SWAP4 POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP9 DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x141B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x1A50 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x14BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14DD DUP2 PUSH2 0x148F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x150A JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x14EE JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14DD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x156D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B4 DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E0 DUP5 PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP PUSH2 0x15EE PUSH1 0x20 DUP6 ADD PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14DD DUP3 PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x162C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1635 DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x164A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x169A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16A3 DUP6 PUSH2 0x1574 JUMP JUMPDEST SWAP4 POP PUSH2 0x16B1 PUSH1 0x20 DUP7 ADD PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x16FB JUMPI PUSH2 0x16FB PUSH2 0x1655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1741 JUMPI PUSH2 0x1741 PUSH2 0x1655 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x175A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x17C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1800 DUP6 DUP3 DUP7 ADD PUSH2 0x177E JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1828 DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH2 0x1836 PUSH1 0x20 DUP5 ADD PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1897 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x185C JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x14DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1954 JUMPI PUSH2 0x1954 PUSH2 0x18F4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x51E JUMPI PUSH2 0x51E PUSH2 0x18F4 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19AC JUMPI PUSH2 0x19AC PUSH2 0x196E JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19C0 JUMPI PUSH2 0x19C0 PUSH2 0x196E JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x51E JUMPI PUSH2 0x51E PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1A46 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x14E4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14DD DUP2 PUSH2 0x148F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xE0 ADD PUSH30 0x728E57D31D65C17E07771330B08B70E61E3E9FD634906B30AE10A87D6473 PUSH16 0x6C634300081400330000000000000000 ",
      "sourceMap": "275:2349:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4499:311:1;;;;;;:::i;:::-;;:::i;:::-;;;611:14:11;;604:22;586:41;;574:2;559:18;4499:311:1;;;;;;;;2068:94:10;2132:23;;;;;;;;;;;;;;;;;2068:94;;;;;;;:::i;3010:400:1:-;;;;;;:::i;:::-;;:::i;:::-;;;1711:42:11;1699:55;;;1681:74;;1669:2;1654:18;3010:400:1;1535:226:11;869:411:1;;;;;;:::i;:::-;;:::i;:::-;;1314:775;;;;;;:::i;:::-;;:::i;2123:173::-;;;;;;:::i;:::-;;:::i;4859:313::-;;;;;;:::i;:::-;4983:13;9961:16;;;;;;;;;;;;5153:11;;;;;;;4859:313;;;;;2763:42:11;2751:55;;;2733:74;;2838:2;2823:18;;2816:34;;;;2706:18;4859:313:1;2559:297:11;2762:214:1;;;;;;:::i;:::-;;:::i;2509:219::-;;;;;;:::i;:::-;;:::i;:::-;;;3198:25:11;;;3186:2;3171:18;2509:219:1;3052:177:11;2168:85:10;2234:12;;;;;;;;;;;;;;;;;2168:85;;2330:145:1;;;;;;:::i;:::-;;:::i;3649:816::-;;;;;;:::i;:::-;;:::i;422:32:10:-;;453:1;422:32;;804:343;;;;;;:::i;:::-;;:::i;1963:99::-;;;;;;:::i;:::-;-1:-1:-1;2046:9:10;;;;;;;;;-1:-1:-1;2046:9:10;;;1963:99;460:53;;;;;;;;;;;;;;;;;;;;;3444:171:1;;;;;;:::i;:::-;3575:23;;;;3541:15;3575:23;;;:16;:23;;;;;;;;:33;;;;;;;;;;;;;;;3444:171;5221:495;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;588:51:10:-;;;;;;;;;;;;;;;;;;;;;4499:311:1;4584:4;4720:25;;;;;;:54;;-1:-1:-1;4749:25:1;;;;;4720:54;:83;;;-1:-1:-1;4778:25:1;;;;;4720:83;4713:90;4499:311;-1:-1:-1;;4499:311:1:o;3010:400::-;3080:16;9425;;;;;;;;;;;536:66;9510:20;;;9509:39;3197:19;;;3193:82;;3239:25;;;;;;;;3198::11;;;3171:18;;3239:25:1;;;;;;;;3193:82;3288:15;3284:120;;;-1:-1:-1;;;3326:19:1;;;;:10;:19;;;;;;;;;3010:400::o;3284:120::-;-1:-1:-1;3391:1:1;;3010:400;-1:-1:-1;;;3010:400:1:o;869:411::-;950:13;9961:16;;;;;;;;;;;10051:24;10044:3;10036:11;;;10035:40;1021:19;;;1017:82;;1063:25;;;;;;;;3198::11;;;3171:18;;1063:25:1;3052:177:11;1017:82:1;1112:10;:19;;;;;;;:59;;-1:-1:-1;3575:23:1;;;3541:15;3575:23;;;:16;:23;;;;;;;;1160:10;3575:33;;;;;;;;;;1135:36;1112:59;1108:112;;;1194:15;;;;;;;;;;;;;;1108:112;1229:44;1241:5;1248;1255:8;1265:7;1229:11;:44::i;:::-;939:341;;869:411;;:::o;1314:775::-;1438:13;10717:16;;;;;;;;;;;10874:24;10867:3;10859:11;;;10858:40;536:66;10802:20;;;10801:39;1546:19;;;1542:82;;1588:25;;;;;;;;3198::11;;;3171:18;;1588:25:1;3052:177:11;1542:82:1;1645:5;1637:13;;:4;:13;;;1633:72;;1673:21;;;;;7766:42:11;7835:15;;;1673:21:1;;;7817:34:11;7887:15;;7867:18;;;7860:43;7729:18;;1673:21:1;7582:327:11;1633:72:1;1718:16;;;;;:39;;-1:-1:-1;1738:19:1;;;1752:4;1738:19;1718:39;1714:95;;;1780:18;;;;;1711:42:11;1699:55;;1780:18:1;;;1681:74:11;1654:18;;1780::1;1535:226:11;1714:95:1;1822:10;:18;;;;1818:203;;1862:15;:52;;;;-1:-1:-1;1881:19:1;;;;:10;:19;;;;;;:33;:19;1904:10;1881:33;1862:52;1860:55;:94;;;;-1:-1:-1;3575:23:1;;;3541:15;3575:23;;;:16;:23;;;;;;;;1943:10;3575:33;;;;;;;;;;1919:35;1860:94;1856:155;;;1981:15;;;;;;;;;;;;;;1856:155;2030:52;2044:4;2050:2;2054:7;2073:2;2064:11;;;2063:18;;2030:13;:52::i;:::-;1427:662;;;1314:775;;;:::o;2123:173::-;2250:39;2267:4;2273:2;2277:7;2250:39;;;;;;;;;;;;:16;:39::i;:::-;2123:173;;;:::o;2762:214::-;2828:13;8972:16;;;;;;;;;;;2892:19;;;2888:82;;2934:25;;;;;;;;3198::11;;;3171:18;;2934:25:1;3052:177:11;2888:82:1;2762:214;;;:::o;2509:219::-;2581:15;2612:19;;;2608:78;;2654:21;;;;;1711:42:11;1699:55;;2654:21:1;;;1681:74:11;1654:18;;2654:21:1;1535:226:11;2608:78:1;-1:-1:-1;2705:16:1;;;;;;:9;:16;;;;;;;2509:219::o;2330:145::-;2418:50;2437:10;2449:8;2459;2418:18;:50::i;:::-;2330:145;;:::o;3649:816::-;3802:13;10717:16;;;;;;;;;;;10874:24;10867:3;10859:11;;;10858:40;536:66;10802:20;;;10801:39;3910:19;;;3906:82;;3952:25;;;;;;;;3198::11;;;3171:18;;3952:25:1;3052:177:11;3906:82:1;4010:4;4001:13;;:5;:13;;;3997:72;;4037:21;;;;;7766:42:11;7835:15;;;4037:21:1;;;7817:34:11;7887:15;;7867:18;;;7860:43;7729:18;;4037:21:1;7582:327:11;3997:72:1;4083:16;;;;;:39;;-1:-1:-1;4103:19:1;;;4117:4;4103:19;4083:39;4079:95;;;4145:18;;;;;1711:42:11;1699:55;;4145:18:1;;;1681:74:11;1654:18;;4145::1;1535:226:11;4079:95:1;4188:10;:18;;;;4184:203;;4228:15;:52;;;;-1:-1:-1;4247:19:1;;;;:10;:19;;;;;;:33;:19;4270:10;4247:33;4228:52;4226:55;:94;;;;-1:-1:-1;3575:23:1;;;3541:15;3575:23;;;:16;:23;;;;;;;;4309:10;3575:33;;;;;;;;;;4285:35;4226:94;4222:155;;;4347:15;;;;;;;;;;;;;;4222:155;4396:62;4414:4;4420:2;4424:7;4443:2;4434:11;;;4433:18;;4453:4;4396:17;:62::i;:::-;3791:674;;;3649:816;;;;:::o;804:343:10:-;892:6;;;;;;;;;;;;;;;;;927:16;871:18;954:187;974:16;;;954:187;;;1011:10;1055:31;1060:5;1067:8;1077:5;;1083:1;1077:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1055:4;:31::i;:::-;1035:51;-1:-1:-1;1035:51:10;-1:-1:-1;1035:51:10;1100:30;;;;;;;8575:2:11;1100:30:10;;;8557:21:11;8614:2;8594:18;;;8587:30;8653:14;8633:18;;;8626:42;8685:18;;1100:30:10;8373:336:11;1100:30:10;-1:-1:-1;992:3:10;;;;:::i;:::-;;;;954:187;;;;861:286;;804:343;;:::o;5221:495:1:-;5358:29;5432:8;5416:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;5416:32:1;;;;;;;;;;;;;;;;5403:45;;5463:9;5458:252;5478:19;;;5458:252;;;5518:12;5533:7;:20;5541:8;;5550:1;5541:11;;;;;;;:::i;:::-;;;;;;;5533:20;;;;;;;;;;;;5518:35;;5605:4;5567:10;5578:1;5567:13;;;;;;;;:::i;:::-;;;;;;;:19;;:44;;;;;;;;;;;5674:3;5666:4;:11;;5681:18;5665:34;5625:10;5636:1;5625:13;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;:74;-1:-1:-1;5499:3:1;;;;:::i;:::-;;;;5458:252;;;;5221:495;;;;:::o;7048:649::-;7231:2;7222:11;;;7200:19;7262:9;7222:5;7270:1;7262:9;:::i;:::-;7243:28;;7303:11;7297:2;7285:8;:14;;:29;7281:82;;7337:15;;;;;;;;;;;;;;7281:82;7376:22;;;7372:270;;7414:7;:16;;;;;;;;;;7446:3;7434:15;;;7453:23;;;7433:43;7414:62;;7372:270;;;7507:7;:16;;;;;;;;;;;7563:23;;;;7556:3;7544:15;;;7543:43;536:66;7526:61;7507:80;;;7601:10;:19;;;;;;:30;;;;;;;;;;;;;7372:270;7682:7;7672:8;7656:34;;7665:5;7656:34;;;;;;;;;;;;7190:507;;7048:649;;;;:::o;6523:493::-;6695:13;;;;;;;:9;:13;;;;;;;;:15;;;;;;;6724:66;;;;6758:15;;;;;;;:9;:15;;;;;:17;;;;;;6724:66;6904:7;:16;;;;;;;;;;;6924:12;6940:3;6924:19;6947:20;;;;6923:44;;;6904:63;;;6982:27;;6912:7;;6982:27;;;;;;;6523:493;;;;:::o;7739:245::-;7874:24;;;;;;;;:16;:24;;;;;;;;:34;;;;;;;;;;;;;:45;;;;;;;;;;;;;7935:42;;586:41:11;;;7935:42:1;;559:18:11;7935:42:1;;;;;;;7739:245;;;:::o;6117:400::-;6288:44;6302:4;6308:2;6312:7;6321:10;6288:13;:44::i;:::-;6346:13;;;1478:19:7;:23;6342:169:1;;6382:59;6405:10;6417:4;6423:2;6427:7;6436:4;6382:22;:59::i;:::-;6377:124;;6468:18;;;;;;;;;;;;;;1153:804:10;1271:10;;;1326:15;453:1;1326:8;:15;:::i;:::-;1314:27;-1:-1:-1;1351:9:10;1363:15;453:1;1363:8;:15;:::i;:::-;1351:27;-1:-1:-1;1400:10:10;1392:4;:18;;;;;;;;:::i;:::-;;1388:563;;1434:8;1441:1;453;1434:8;:::i;:::-;1430:1;:12;1426:93;;;1470:4;1462:12;;1426:93;1388:563;;;1547:9;1539:4;:17;;;;;;;;:::i;:::-;;1535:416;;1580:8;1587:1;453;1580:8;:::i;:::-;1576:1;:12;1572:93;;;1616:4;1608:12;;1535:416;;;1693:9;1685:4;:17;;;;;;;;:::i;:::-;;1681:270;;1722:5;;1718:86;;1755:4;1747:12;;1681:270;;;1832:7;1824:4;:15;;;;;;;;:::i;:::-;;1820:131;;1859:5;;1855:86;;1892:4;1884:12;;1855:86;1304:653;;1153:804;;;;;;:::o;8444:326:1:-;8620:4;8636:13;8668:2;8652:36;;;8689:8;8699:4;8705:7;8714:4;8652:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8737:25;;8747:15;8737:25;;-1:-1:-1;;8444:326:1;;;;;;;:::o;14:177:11:-;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;68:117;14:177;:::o;196:245::-;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;:::-;430:5;196:245;-1:-1:-1;;;196:245:11:o;638:482::-;680:3;718:5;712:12;745:6;740:3;733:19;770:1;780:162;794:6;791:1;788:13;780:162;;;856:4;912:13;;;908:22;;902:29;884:11;;;880:20;;873:59;809:12;780:162;;;784:3;987:1;980:4;971:6;966:3;962:16;958:27;951:38;1109:4;1039:66;1034:2;1026:6;1022:15;1018:88;1013:3;1009:98;1005:109;998:116;;;638:482;;;;:::o;1125:220::-;1274:2;1263:9;1256:21;1237:4;1294:45;1335:2;1324:9;1320:18;1312:6;1294:45;:::i;1350:180::-;1409:6;1462:2;1450:9;1441:7;1437:23;1433:32;1430:52;;;1478:1;1475;1468:12;1430:52;-1:-1:-1;1501:23:11;;1350:180;-1:-1:-1;1350:180:11:o;1766:196::-;1834:20;;1894:42;1883:54;;1873:65;;1863:93;;1952:1;1949;1942:12;1967:254;2035:6;2043;2096:2;2084:9;2075:7;2071:23;2067:32;2064:52;;;2112:1;2109;2102:12;2064:52;2135:29;2154:9;2135:29;:::i;:::-;2125:39;2211:2;2196:18;;;;2183:32;;-1:-1:-1;;;1967:254:11:o;2226:328::-;2303:6;2311;2319;2372:2;2360:9;2351:7;2347:23;2343:32;2340:52;;;2388:1;2385;2378:12;2340:52;2411:29;2430:9;2411:29;:::i;:::-;2401:39;;2459:38;2493:2;2482:9;2478:18;2459:38;:::i;:::-;2449:48;;2544:2;2533:9;2529:18;2516:32;2506:42;;2226:328;;;;;:::o;2861:186::-;2920:6;2973:2;2961:9;2952:7;2948:23;2944:32;2941:52;;;2989:1;2986;2979:12;2941:52;3012:29;3031:9;3012:29;:::i;3234:347::-;3299:6;3307;3360:2;3348:9;3339:7;3335:23;3331:32;3328:52;;;3376:1;3373;3366:12;3328:52;3399:29;3418:9;3399:29;:::i;:::-;3389:39;;3478:2;3467:9;3463:18;3450:32;3525:5;3518:13;3511:21;3504:5;3501:32;3491:60;;3547:1;3544;3537:12;3491:60;3570:5;3560:15;;;3234:347;;;;;:::o;3586:184::-;3638:77;3635:1;3628:88;3735:4;3732:1;3725:15;3759:4;3756:1;3749:15;3775:1197;3870:6;3878;3886;3894;3947:3;3935:9;3926:7;3922:23;3918:33;3915:53;;;3964:1;3961;3954:12;3915:53;3987:29;4006:9;3987:29;:::i;:::-;3977:39;;4035:38;4069:2;4058:9;4054:18;4035:38;:::i;:::-;4025:48;;4120:2;4109:9;4105:18;4092:32;4082:42;;4175:2;4164:9;4160:18;4147:32;4198:18;4239:2;4231:6;4228:14;4225:34;;;4255:1;4252;4245:12;4225:34;4293:6;4282:9;4278:22;4268:32;;4338:7;4331:4;4327:2;4323:13;4319:27;4309:55;;4360:1;4357;4350:12;4309:55;4396:2;4383:16;4418:2;4414;4411:10;4408:36;;;4424:18;;:::i;:::-;4558:2;4552:9;4620:4;4612:13;;4463:66;4608:22;;;4632:2;4604:31;4600:40;4588:53;;;4656:18;;;4676:22;;;4653:46;4650:72;;;4702:18;;:::i;:::-;4742:10;4738:2;4731:22;4777:2;4769:6;4762:18;4817:7;4812:2;4807;4803;4799:11;4795:20;4792:33;4789:53;;;4838:1;4835;4828:12;4789:53;4894:2;4889;4885;4881:11;4876:2;4868:6;4864:15;4851:46;4939:1;4934:2;4929;4921:6;4917:15;4913:24;4906:35;4960:6;4950:16;;;;;;;3775:1197;;;;;;;:::o;4977:369::-;5042:8;5052:6;5106:3;5099:4;5091:6;5087:17;5083:27;5073:55;;5124:1;5121;5114:12;5073:55;-1:-1:-1;5147:20:11;;5190:18;5179:30;;5176:50;;;5222:1;5219;5212:12;5176:50;5259:4;5251:6;5247:17;5235:29;;5319:3;5312:4;5302:6;5299:1;5295:14;5287:6;5283:27;5279:38;5276:47;5273:67;;;5336:1;5333;5326:12;5273:67;4977:369;;;;;:::o;5351:448::-;5446:6;5454;5507:2;5495:9;5486:7;5482:23;5478:32;5475:52;;;5523:1;5520;5513:12;5475:52;5563:9;5550:23;5596:18;5588:6;5585:30;5582:50;;;5628:1;5625;5618:12;5582:50;5667:72;5731:7;5722:6;5711:9;5707:22;5667:72;:::i;:::-;5758:8;;5641:98;;-1:-1:-1;5351:448:11;-1:-1:-1;;;;5351:448:11:o;6027:260::-;6095:6;6103;6156:2;6144:9;6135:7;6131:23;6127:32;6124:52;;;6172:1;6169;6162:12;6124:52;6195:29;6214:9;6195:29;:::i;:::-;6185:39;;6243:38;6277:2;6266:9;6262:18;6243:38;:::i;:::-;6233:48;;6027:260;;;;;:::o;6736:841::-;6961:2;7013:21;;;7083:13;;6986:18;;;7105:22;;;6932:4;;6961:2;7146;;7164:18;;;;7205:15;;;6932:4;7248:303;7262:6;7259:1;7256:13;7248:303;;;7321:13;;7363:9;;7374:42;7359:58;7347:71;;7458:11;;7452:18;7438:12;;;7431:40;7491:12;;;;7526:15;;;;7284:1;7277:9;7248:303;;;-1:-1:-1;7568:3:11;;6736:841;-1:-1:-1;;;;;;;6736:841:11:o;7914:184::-;7966:77;7963:1;7956:88;8063:4;8060:1;8053:15;8087:4;8084:1;8077:15;8103:265;8171:6;8224:2;8212:9;8203:7;8199:23;8195:32;8192:52;;;8240:1;8237;8230:12;8192:52;8279:9;8266:23;8318:1;8311:5;8308:12;8298:40;;8334:1;8331;8324:12;8714:184;8766:77;8763:1;8756:88;8863:4;8860:1;8853:15;8887:4;8884:1;8877:15;8903:195;8942:3;8973:66;8966:5;8963:77;8960:103;;9043:18;;:::i;:::-;-1:-1:-1;9090:1:11;9079:13;;8903:195::o;9103:125::-;9168:9;;;9189:10;;;9186:36;;;9202:18;;:::i;9233:184::-;9285:77;9282:1;9275:88;9382:4;9379:1;9372:15;9406:4;9403:1;9396:15;9422:112;9454:1;9480;9470:35;;9485:18;;:::i;:::-;-1:-1:-1;9519:9:11;;9422:112::o;9539:120::-;9579:1;9605;9595:35;;9610:18;;:::i;:::-;-1:-1:-1;9644:9:11;;9539:120::o;9664:184::-;9716:77;9713:1;9706:88;9813:4;9810:1;9803:15;9837:4;9834:1;9827:15;9853:128;9920:9;;;9941:11;;;9938:37;;;9955:18;;:::i;9986:512::-;10180:4;10209:42;10290:2;10282:6;10278:15;10267:9;10260:34;10342:2;10334:6;10330:15;10325:2;10314:9;10310:18;10303:43;;10382:6;10377:2;10366:9;10362:18;10355:34;10425:3;10420:2;10409:9;10405:18;10398:31;10446:46;10487:3;10476:9;10472:19;10464:6;10446:46;:::i;:::-;10438:54;9986:512;-1:-1:-1;;;;;;9986:512:11:o;10503:249::-;10572:6;10625:2;10613:9;10604:7;10600:23;10596:32;10593:52;;;10641:1;10638;10631:12;10593:52;10673:9;10667:16;10692:30;10716:5;10692:30;:::i"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "1363800",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "RANDOM()": "infinite",
        "SIZE()": "262",
        "SOLUTION()": "infinite",
        "approve(address,uint256)": "53565",
        "balanceOf(address)": "2642",
        "getApproved(uint256)": "4768",
        "isApprovedForAll(address,address)": "infinite",
        "name()": "infinite",
        "ownerAndLastTransferBlockNumberList(uint256[])": "infinite",
        "ownerAndLastTransferBlockNumberOf(uint256)": "2540",
        "ownerOf(uint256)": "2557",
        "proposeSolution(uint8[])": "infinite",
        "safeTransferFrom(address,address,uint256)": "infinite",
        "safeTransferFrom(address,address,uint256,bytes)": "infinite",
        "setApprovalForAll(address,bool)": "26665",
        "supportsInterface(bytes4)": "456",
        "symbol()": "infinite",
        "tokenURI(uint256)": "539",
        "transferFrom(address,address,uint256)": "infinite"
      },
      "internal": {
        "_at(bytes memory,uint256)": "infinite",
        "step(bytes memory,uint256,enum VitalikSecret.Move)": "393"
      }
    },
    "methodIdentifiers": {
      "RANDOM()": "f964d109",
      "SIZE()": "bdffd282",
      "SOLUTION()": "d9158ec8",
      "approve(address,uint256)": "095ea7b3",
      "balanceOf(address)": "70a08231",
      "getApproved(uint256)": "081812fc",
      "isApprovedForAll(address,address)": "e985e9c5",
      "name()": "06fdde03",
      "ownerAndLastTransferBlockNumberList(uint256[])": "f3945282",
      "ownerAndLastTransferBlockNumberOf(uint256)": "48f3c51c",
      "ownerOf(uint256)": "6352211e",
      "proposeSolution(uint8[])": "c370c3c7",
      "safeTransferFrom(address,address,uint256)": "42842e0e",
      "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
      "setApprovalForAll(address,bool)": "a22cb465",
      "supportsInterface(bytes4)": "01ffc9a7",
      "symbol()": "95d89b41",
      "tokenURI(uint256)": "c87b56dd",
      "transferFrom(address,address,uint256)": "23b872dd"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"NonExistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonceOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provided\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"}],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferRejected\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"RANDOM\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SOLUTION\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOperator\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIDs\",\"type\":\"uint256[]\"}],\"name\":\"ownerAndLastTransferBlockNumberList\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastTransferBlockNumber\",\"type\":\"uint256\"}],\"internalType\":\"struct IERC721WithBlocknumber.OwnerData[]\",\"name\":\"ownersData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"ownerAndLastTransferBlockNumberOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VitalikSecret.Move[]\",\"name\":\"moves\",\"type\":\"uint8[]\"}],\"name\":\"proposeSolution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidAddress(address)\":[{\"params\":{\"addr\":\"invalid address\"}}],\"NonExistentToken(uint256)\":[{\"params\":{\"tokenID\":\"id of the expected token\"}}],\"NotOwner(address,address)\":[{\"params\":{\"currentOwner\":\"the current owner\",\"provided\":\"the address expected to be the current owner\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"approved\":\"account who can know transfer on the owner's behalf\",\"owner\":\"current owner of the token\",\"tokenID\":\"id of the token being approved\"}},\"ApprovalForAll(address,address,bool)\":{\"params\":{\"approved\":\"whether it is approved or not\",\"operator\":\"account who can know transfer on the owner's behalf\",\"owner\":\"the account granting rights over all of its token\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"the account the token is sent from\",\"to\":\"the account the token is sent to\",\"tokenID\":\"id of the token being sent\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"params\":{\"operator\":\"The address receiving the approval.\",\"tokenID\":\"The id of the token.\"}},\"balanceOf(address)\":{\"params\":{\"owner\":\"The address to look for.\"},\"returns\":{\"balance\":\"The number of tokens owned by the address.\"}},\"getApproved(uint256)\":{\"params\":{\"tokenID\":\"The id of the token.\"},\"returns\":{\"operator\":\"The address of the operator.\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"operator\":\"The address of the operator.\",\"owner\":\"The address of the owner.\"},\"returns\":{\"isOperator\":\"The status of the approval.\"}},\"ownerAndLastTransferBlockNumberList(uint256[])\":{\"params\":{\"tokenIDs\":\"The list of token ids to check.\"},\"returns\":{\"ownersData\":\"The list of (owner, lastTransferBlockNumber) for each ids given as input.\"}},\"ownerAndLastTransferBlockNumberOf(uint256)\":{\"params\":{\"tokenID\":\"The id of the token.\"},\"returns\":{\"blockNumber\":\"The blocknumber at which the last transfer of that id happened.\",\"owner\":\"The address of the token owner.\"}},\"ownerOf(uint256)\":{\"params\":{\"tokenID\":\"The id of the token.\"},\"returns\":{\"owner\":\"The address of the token owner.\"}},\"safeTransferFrom(address,address,uint256)\":{\"params\":{\"from\":\"The send of the token.\",\"to\":\"The recipient of the token.\",\"tokenID\":\"The id of the token.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"params\":{\"data\":\"Additional data.\",\"from\":\"The sender of the token.\",\"to\":\"The recipient of the token.\",\"tokenID\":\"The id of the token.\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"approved\":\"The determination of the approval.\",\"operator\":\"The address receiving the approval.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise\"}},\"tokenURI(uint256)\":{\"details\":\"Throws if `tokenID` is not a valid NFT. URIs are defined in RFC  3986. The URI may point to a JSON file that conforms to the \\\"ERC721  Metadata JSON Schema\\\".\",\"params\":{\"tokenID\":\"id of the token being queried.\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"from\":\"The sender of the token.\",\"to\":\"The recipient of the token.\",\"tokenID\":\"The id of the token.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAddress(address)\":[{\"notice\":\"An invalid address is specified (for example: zero address)\"}],\"NonExistentToken(uint256)\":[{\"notice\":\"The token does not exist\"}],\"NonceOverflow()\":[{\"notice\":\"The Nonce overflowed, make a transfer to self to allow new nonces.\"}],\"NotAuthorized()\":[{\"notice\":\"Not authorized to perform this operation\"}],\"NotOwner(address,address)\":[{\"notice\":\"The address from which the token is sent is not the current owner\"}],\"TransferRejected()\":[{\"notice\":\"The Transfer was rejected by the destination\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Triggered when a token is approved to be sent by another account  Note tat the approval get reset when a Transfer event for that same token is emitted.\"},\"ApprovalForAll(address,address,bool)\":{\"notice\":\"Triggered when an account approve or disaprove another to transfer on its behalf\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Triggered when a token is transferred\"}},\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Approve an operator to transfer a specific token on the senders behalf.\"},\"balanceOf(address)\":{\"notice\":\"Get the number of tokens owned by an address.\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved operator for a specific token.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Check if the sender approved the operator to transfer any of its tokens.\"},\"name()\":{\"notice\":\"A descriptive name for a collection of NFTs in this contract\"},\"ownerAndLastTransferBlockNumberList(uint256[])\":{\"notice\":\"Get the list of owner of a token and the blockNumber of its last transfer, useful to voting mechanism.\"},\"ownerAndLastTransferBlockNumberOf(uint256)\":{\"notice\":\"Get the owner of a token and the blockNumber of the last transfer, useful to voting mechanism.\"},\"ownerOf(uint256)\":{\"notice\":\"Get the owner of a token.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfer a token between 2 addresses letting the receiver know of the transfer.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfer a token between 2 addresses letting the receiver knows of the transfer.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Set the approval for an operator to manage all the tokens of the sender.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"symbol()\":{\"notice\":\"An abbreviated name for NFTs in this contract\"},\"tokenURI(uint256)\":{\"notice\":\"A distinct Uniform Resource Identifier (URI) for a given asset.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer a token between 2 addresses.\"}},\"notice\":\"a puzzle\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/VitalikSecret.sol\":\"VitalikSecret\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"solidity-kit/solc_0.8/ERC165/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IERC165 {\\n    /// @notice Query if a contract implements an interface\\n    /// @param interfaceID The interface identifier, as specified in ERC-165\\n    /// @dev Interface identification is specified in ERC-165. This function\\n    ///  uses less than 30,000 gas.\\n    /// @return `true` if the contract implements `interfaceID` and\\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x0bbdb7cf3d2c6acf95398c0ef54cb0e6ae8a3e6ce6f18fafeb0aa55cb74fb8fd\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/ERC721/implementations/BasicERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IERC721Receiver.sol\\\";\\nimport \\\"../interfaces/IERC721.sol\\\";\\nimport \\\"../interfaces/IERC721WithBlocknumber.sol\\\";\\nimport \\\"./ImplementingERC721Internal.sol\\\";\\n\\nimport \\\"../../openzeppelin/contracts/utils/Address.sol\\\";\\n\\nabstract contract BasicERC721 is IERC721, IERC721WithBlocknumber, ImplementingERC721Internal {\\n    using Openzeppelin_Address for address;\\n\\n    bytes4 internal constant ERC721_RECEIVED = 0x150b7a02;\\n\\n    uint256 internal constant OPERATOR_FLAG = 0x8000000000000000000000000000000000000000000000000000000000000000;\\n\\n    mapping(uint256 => uint256) internal _owners;\\n    mapping(address => uint256) internal _balances;\\n    mapping(address => mapping(address => bool)) internal _operatorsForAll;\\n    mapping(uint256 => address) internal _operators;\\n\\n    /// @inheritdoc IERC721\\n    function approve(address operator, uint256 tokenID) external override {\\n        (address owner, uint256 nonce) = _ownerAndNonceOf(tokenID);\\n        if (owner == address(0)) {\\n            revert NonExistentToken(tokenID);\\n        }\\n        if (msg.sender != owner && !isApprovedForAll(owner, msg.sender)) {\\n            revert NotAuthorized();\\n        }\\n        _approveFor(owner, nonce, operator, tokenID);\\n    }\\n\\n    /// @inheritdoc IERC721\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenID\\n    ) external override {\\n        (address owner, uint256 nonce, bool operatorEnabled) = _ownerNonceAndOperatorEnabledOf(tokenID);\\n        if (owner == address(0)) {\\n            revert NonExistentToken(tokenID);\\n        }\\n        if (from != owner) {\\n            revert NotOwner(from, owner);\\n        }\\n        if (to == address(0) || to == address(this)) {\\n            revert InvalidAddress(to);\\n        }\\n        if (msg.sender != from) {\\n            if (!(operatorEnabled && _operators[tokenID] == msg.sender) && !isApprovedForAll(from, msg.sender)) {\\n                revert NotAuthorized();\\n            }\\n        }\\n        _transferFrom(from, to, tokenID, (nonce >> 24) != 0);\\n    }\\n\\n    /// @inheritdoc IERC721\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenID\\n    ) external override {\\n        safeTransferFrom(from, to, tokenID, \\\"\\\");\\n    }\\n\\n    /// @inheritdoc IERC721\\n    function setApprovalForAll(address operator, bool approved) external override {\\n        _setApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    /// @inheritdoc IERC721\\n    function balanceOf(address owner) public view virtual override returns (uint256 balance) {\\n        if (owner == address(0)) {\\n            revert InvalidAddress(owner);\\n        }\\n        balance = _balances[owner];\\n    }\\n\\n    /// @inheritdoc IERC721\\n    function ownerOf(uint256 tokenID) external view override returns (address owner) {\\n        owner = _ownerOf(tokenID);\\n        if (owner == address(0)) {\\n            revert NonExistentToken(tokenID);\\n        }\\n    }\\n\\n    /// @inheritdoc IERC721\\n    function getApproved(uint256 tokenID) external view override returns (address operator) {\\n        (address owner, bool operatorEnabled) = _ownerAndOperatorEnabledOf(tokenID);\\n        if (owner == address(0)) {\\n            revert NonExistentToken(tokenID);\\n        }\\n        if (operatorEnabled) {\\n            return _operators[tokenID];\\n        } else {\\n            return address(0);\\n        }\\n    }\\n\\n    /// @inheritdoc IERC721\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool isOperator) {\\n        return _operatorsForAll[owner][operator];\\n    }\\n\\n    /// @inheritdoc IERC721\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenID,\\n        bytes memory data\\n    ) public override {\\n        (address owner, uint256 nonce, bool operatorEnabled) = _ownerNonceAndOperatorEnabledOf(tokenID);\\n        if (owner == address(0)) {\\n            revert NonExistentToken(tokenID);\\n        }\\n        if (owner != from) {\\n            revert NotOwner(from, owner);\\n        }\\n\\n        if (to == address(0) || to == address(this)) {\\n            revert InvalidAddress(to);\\n        }\\n\\n        if (msg.sender != from) {\\n            if (!(operatorEnabled && _operators[tokenID] == msg.sender) && !isApprovedForAll(from, msg.sender)) {\\n                revert NotAuthorized();\\n            }\\n        }\\n        _safeTransferFrom(from, to, tokenID, (nonce >> 24) != 0, data);\\n    }\\n\\n    /// @inheritdoc IERC165\\n    function supportsInterface(bytes4 interfaceID) public view virtual override returns (bool) {\\n        /// 0x01ffc9a7 is ERC165.\\n        /// 0x80ac58cd is ERC721\\n        /// 0x5b5e139f is for ERC721 metadata\\n        return interfaceID == 0x01ffc9a7 || interfaceID == 0x80ac58cd || interfaceID == 0x5b5e139f;\\n    }\\n\\n    /// @inheritdoc IERC721WithBlocknumber\\n    function ownerAndLastTransferBlockNumberOf(uint256 tokenID)\\n        external\\n        view\\n        override\\n        returns (address owner, uint256 blockNumber)\\n    {\\n        (address currentOwner, uint256 nonce) = _ownerAndNonceOf(tokenID);\\n        owner = currentOwner;\\n        blockNumber = (nonce >> 24);\\n    }\\n\\n    /// @inheritdoc IERC721WithBlocknumber\\n    function ownerAndLastTransferBlockNumberList(uint256[] calldata tokenIDs)\\n        external\\n        view\\n        virtual\\n        returns (OwnerData[] memory ownersData)\\n    {\\n        ownersData = new OwnerData[](tokenIDs.length);\\n        for (uint256 i = 0; i < tokenIDs.length; i++) {\\n            uint256 data = _owners[tokenIDs[i]];\\n            ownersData[i].owner = address(uint160(data));\\n            ownersData[i].lastTransferBlockNumber = (data >> 184) & 0xFFFFFFFFFFFFFFFF;\\n        }\\n    }\\n\\n    // ------------------------------------------------------------------------------------------------------------------\\n    // INTERNALS\\n    // ------------------------------------------------------------------------------------------------------------------\\n\\n    function _safeMint(address to, uint256 tokenID) internal {\\n        _safeTransferFrom(address(0), to, tokenID, false, \\\"\\\");\\n    }\\n\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenID,\\n        bool registered,\\n        bytes memory data\\n    ) internal {\\n        _transferFrom(from, to, tokenID, registered);\\n        if (to.isContract()) {\\n            if (!_checkOnERC721Received(msg.sender, from, to, tokenID, data)) {\\n                revert TransferRejected();\\n            }\\n        }\\n    }\\n\\n    function _transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenID,\\n        bool registered\\n    ) internal virtual {\\n        unchecked {\\n            _balances[to]++;\\n            if (registered) {\\n                _balances[from]--;\\n            }\\n        }\\n\\n        // We encode the blockNumber in the token nonce. We can then use it for count voting.\\n        _owners[tokenID] = (block.number << 184) | uint256(uint160(to));\\n        emit Transfer(from, to, tokenID);\\n    }\\n\\n    /// @dev See approve.\\n    function _approveFor(\\n        address owner,\\n        uint256 nonce,\\n        address operator,\\n        uint256 tokenID\\n    ) internal override {\\n        uint256 blockNumber = nonce >> 24;\\n        uint256 newNonce = nonce + 1;\\n        if (newNonce >> 24 != blockNumber) {\\n            revert NonceOverflow();\\n        }\\n        if (operator == address(0)) {\\n            _owners[tokenID] = (newNonce << 160) | uint256(uint160(owner));\\n        } else {\\n            _owners[tokenID] = OPERATOR_FLAG | ((newNonce << 160) | uint256(uint160(owner)));\\n            _operators[tokenID] = operator;\\n        }\\n        emit Approval(owner, operator, tokenID);\\n    }\\n\\n    /// @dev See setApprovalForAll.\\n    function _setApprovalForAll(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) internal override {\\n        _operatorsForAll[sender][operator] = approved;\\n\\n        emit ApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /// @dev Check if receiving contract accepts erc721 transfers.\\n    /// @param operator The address of the operator.\\n    /// @param from The from address, may be different from msg.sender.\\n    /// @param to The adddress we want to transfer to.\\n    /// @param tokenID The id of the token we would like to transfer.\\n    /// @param data Any additional data to send with the transfer.\\n    /// @return Whether the expected value of 0x150b7a02 is returned.\\n    function _checkOnERC721Received(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 tokenID,\\n        bytes memory data\\n    ) internal returns (bool) {\\n        bytes4 retval = IERC721Receiver(to).onERC721Received(operator, from, tokenID, data);\\n        return (retval == ERC721_RECEIVED);\\n    }\\n\\n    /// @dev Get the owner of a token.\\n    /// @param tokenID The token to query.\\n    function _ownerOf(uint256 tokenID) internal view virtual returns (address owner) {\\n        return address(uint160(_owners[tokenID]));\\n    }\\n\\n    /// @dev Get the owner and operatorEnabled status of a token.\\n    /// @param tokenID The token to query.\\n    /// @return owner The owner of the token.\\n    /// @return operatorEnabled Whether or not operators are enabled for this token.\\n    function _ownerAndOperatorEnabledOf(uint256 tokenID)\\n        internal\\n        view\\n        virtual\\n        returns (address owner, bool operatorEnabled)\\n    {\\n        uint256 data = _owners[tokenID];\\n        owner = address(uint160(data));\\n        operatorEnabled = (data & OPERATOR_FLAG) == OPERATOR_FLAG;\\n    }\\n\\n    /// @dev Get the owner and the permit nonce of a token.\\n    /// @param tokenID The token to query.\\n    /// @return owner The owner of the token.\\n    /// @return nonce the nonce for permit (also incluse the blocknumer in the 64 higer bits (88 bits in total))\\n    function _ownerAndNonceOf(uint256 tokenID) internal view virtual override returns (address owner, uint256 nonce) {\\n        uint256 data = _owners[tokenID];\\n        owner = address(uint160(data));\\n        nonce = (data >> 160) & 0xFFFFFFFFFFFFFFFFFFFFFF;\\n    }\\n\\n    // @dev Get the owner, the permit nonce of a token and operatorEnabled status of a token.\\n    /// @param tokenID The token to query.\\n    /// @return owner The owner of the token.\\n    /// @return nonce the nonce for permit (also incluse the blocknumer in the 64 higer bits (88 bits in total))\\n    /// @return operatorEnabled Whether or not operators are enabled for this token.\\n    function _ownerNonceAndOperatorEnabledOf(uint256 tokenID)\\n        internal\\n        view\\n        virtual\\n        returns (\\n            address owner,\\n            uint256 nonce,\\n            bool operatorEnabled\\n        )\\n    {\\n        uint256 data = _owners[tokenID];\\n        owner = address(uint160(data));\\n        operatorEnabled = (data & OPERATOR_FLAG) == OPERATOR_FLAG;\\n        nonce = (data >> 160) & 0xFFFFFFFFFFFFFFFFFFFFFF;\\n    }\\n}\\n\",\"keccak256\":\"0xa479fafe6c08b94bf3d41b2e5e169bb8cf7f90033691a3903ec6fb13792e4e06\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/ERC721/implementations/ImplementingERC721Internal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract ImplementingERC721Internal {\\n    function _ownerAndNonceOf(uint256 tokenID) internal view virtual returns (address owner, uint256 nonce);\\n\\n    function _approveFor(\\n        address owner,\\n        uint256 nonce,\\n        address operator,\\n        uint256 tokenID\\n    ) internal virtual;\\n\\n    function _setApprovalForAll(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) internal virtual;\\n}\\n\",\"keccak256\":\"0xa8a6ed1a764da2589bd932b67174805ef0c47120d27fa4defc17a2368757efbe\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/ERC721/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../ERC165/interfaces/IERC165.sol\\\";\\nimport \\\"../../utils/GenericErrors.sol\\\";\\n\\ninterface IERC721Supply {\\n    /// @notice return the total number of token in existence\\n    function totalSupply() external view returns (uint256);\\n}\\n\\ninterface IERC721 is IERC165 {\\n    /// @notice Triggered when a token is transferred\\n    /// @param from the account the token is sent from\\n    /// @param to the account the token is sent to\\n    /// @param tokenID id of the token being sent\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenID);\\n\\n    /// @notice Triggered when a token is approved to be sent by another account\\n    ///  Note tat the approval get reset when a Transfer event for that same token is emitted.\\n    /// @param owner current owner of the token\\n    /// @param approved account who can know transfer on the owner's behalf\\n    /// @param tokenID id of the token being approved\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenID);\\n\\n    /// @notice Triggered when an account approve or disaprove another to transfer on its behalf\\n    /// @param owner the account granting rights over all of its token\\n    /// @param operator account who can know transfer on the owner's behalf\\n    /// @param approved whether it is approved or not\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /// @notice The token does not exist\\n    /// @param tokenID id of the expected token\\n    error NonExistentToken(uint256 tokenID);\\n    /// @notice The address from which the token is sent is not the current owner\\n    /// @param provided the address expected to be the current owner\\n    /// @param currentOwner the current owner\\n    error NotOwner(address provided, address currentOwner);\\n    /// @notice An invalid address is specified (for example: zero address)\\n    /// @param addr invalid address\\n    error InvalidAddress(address addr);\\n    /// @notice The Transfer was rejected by the destination\\n    error TransferRejected();\\n    /// @notice The Nonce overflowed, make a transfer to self to allow new nonces.\\n    error NonceOverflow();\\n\\n    /// @notice Get the number of tokens owned by an address.\\n    /// @param owner The address to look for.\\n    /// @return balance The number of tokens owned by the address.\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /// @notice Get the owner of a token.\\n    /// @param tokenID The id of the token.\\n    /// @return owner The address of the token owner.\\n    function ownerOf(uint256 tokenID) external view returns (address owner);\\n\\n    /// @notice Transfer a token between 2 addresses letting the receiver knows of the transfer.\\n    /// @param from The sender of the token.\\n    /// @param to The recipient of the token.\\n    /// @param tokenID The id of the token.\\n    /// @param data Additional data.\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenID,\\n        bytes calldata data\\n    ) external;\\n\\n    /// @notice Transfer a token between 2 addresses letting the receiver know of the transfer.\\n    /// @param from The send of the token.\\n    /// @param to The recipient of the token.\\n    /// @param tokenID The id of the token.\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenID\\n    ) external;\\n\\n    /// @notice Transfer a token between 2 addresses.\\n    /// @param from The sender of the token.\\n    /// @param to The recipient of the token.\\n    /// @param tokenID The id of the token.\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenID\\n    ) external;\\n\\n    /// @notice Approve an operator to transfer a specific token on the senders behalf.\\n    /// @param operator The address receiving the approval.\\n    /// @param tokenID The id of the token.\\n    function approve(address operator, uint256 tokenID) external;\\n\\n    /// @notice Set the approval for an operator to manage all the tokens of the sender.\\n    /// @param operator The address receiving the approval.\\n    /// @param approved The determination of the approval.\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /// @notice Get the approved operator for a specific token.\\n    /// @param tokenID The id of the token.\\n    /// @return operator The address of the operator.\\n    function getApproved(uint256 tokenID) external view returns (address operator);\\n\\n    /// @notice Check if the sender approved the operator to transfer any of its tokens.\\n    /// @param owner The address of the owner.\\n    /// @param operator The address of the operator.\\n    /// @return isOperator The status of the approval.\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfc57636452848e89a81850fe10e3ab1d5d7f5780d55ca0722a38fd59a44fd8ef\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/ERC721/interfaces/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\n\\ninterface IERC721Metadata is IERC721 {\\n    /// @notice A descriptive name for a collection of NFTs in this contract\\n    function name() external view returns (string memory name);\\n\\n    /// @notice An abbreviated name for NFTs in this contract\\n    function symbol() external view returns (string memory symbol);\\n\\n    /// @notice A distinct Uniform Resource Identifier (URI) for a given asset.\\n    /// @dev Throws if `tokenID` is not a valid NFT. URIs are defined in RFC\\n    ///  3986. The URI may point to a JSON file that conforms to the \\\"ERC721\\n    ///  Metadata JSON Schema\\\".\\n    /// @param tokenID id of the token being queried.\\n    function tokenURI(uint256 tokenID) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x8a4ff84c39ad5c6bbf3e5486d3687bc1e15b96835ede5761f1922cf7a72f3354\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/ERC721/interfaces/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IERC721Receiver {\\n    /// @notice Handle the receipt of an NFT\\n    /// @dev The ERC721 smart contract calls this function on the recipient\\n    ///  after a `transfer`. This function MAY throw to revert and reject the\\n    ///  transfer. Return of other than the magic value MUST result in the\\n    ///  transaction being reverted.\\n    ///  Note: the contract address is always the message sender.\\n    /// @param operator The address which called `safeTransferFrom` function\\n    /// @param from The address which previously owned the token\\n    /// @param tokenID The NFT identifier which is being transferred\\n    /// @param data Additional data with no specified format\\n    /// @return `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`\\n    ///  unless throwing\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenID,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x47e1a42d5906cbc70c15f0352836dc7922d857632075c858f64e6286669a5e2e\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/ERC721/interfaces/IERC721WithBlocknumber.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IERC721WithBlocknumber {\\n    /// @notice Get the owner of a token and the blockNumber of the last transfer, useful to voting mechanism.\\n    /// @param tokenID The id of the token.\\n    /// @return owner The address of the token owner.\\n    /// @return blockNumber The blocknumber at which the last transfer of that id happened.\\n    function ownerAndLastTransferBlockNumberOf(uint256 tokenID)\\n        external\\n        view\\n        returns (address owner, uint256 blockNumber);\\n\\n    struct OwnerData {\\n        address owner;\\n        uint256 lastTransferBlockNumber;\\n    }\\n\\n    /// @notice Get the list of owner of a token and the blockNumber of its last transfer, useful to voting mechanism.\\n    /// @param tokenIDs The list of token ids to check.\\n    /// @return ownersData The list of (owner, lastTransferBlockNumber) for each ids given as input.\\n    function ownerAndLastTransferBlockNumberList(uint256[] calldata tokenIDs)\\n        external\\n        view\\n        returns (OwnerData[] memory ownersData);\\n}\\n\",\"keccak256\":\"0x2461ec24c55a1b6c13d451e52ad7600bc2da469996041700a3775efbcde7042b\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Openzeppelin_Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x54a1b5eb6fdeb706049c5f570c398a49ea05f3da2d8e35f3ae344059d622350a\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/utils/GenericErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice Not authorized to perform this operation\\nerror NotAuthorized();\\n\",\"keccak256\":\"0x333aa48943e66849a9350384e7ec2553b93e8a8a12b8ad300d3341f7c98b60fd\",\"license\":\"MIT\"},\"solidity-proxy/solc_0.8/EIP1967/Proxied.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract Proxied {\\n    /// @notice to be used by initialisation / postUpgrade function so that only the proxy's admin can execute them\\n    /// It also allows these functions to be called inside a contructor\\n    /// even if the contract is meant to be used without proxy\\n    modifier proxied() {\\n        address proxyAdminAddress = _proxyAdmin();\\n        // With hardhat-deploy proxies\\n        // the proxyAdminAddress is zero only for the implementation contract\\n        // if the implementation contract want to be used as a standalone/immutable contract\\n        // it simply has to execute the `proxied` function\\n        // This ensure the proxyAdminAddress is never zero post deployment\\n        // And allow you to keep the same code for both proxied contract and immutable contract\\n        if (proxyAdminAddress == address(0)) {\\n            // ensure can not be called twice when used outside of proxy : no admin\\n            // solhint-disable-next-line security/no-inline-assembly\\n            assembly {\\n                sstore(\\n                    0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103,\\n                    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\\n                )\\n            }\\n        } else {\\n            require(msg.sender == proxyAdminAddress);\\n        }\\n        _;\\n    }\\n\\n    modifier onlyProxyAdmin() {\\n        require(msg.sender == _proxyAdmin(), \\\"NOT_AUTHORIZED\\\");\\n        _;\\n    }\\n\\n    function _proxyAdmin() internal view returns (address ownerAddress) {\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            ownerAddress := sload(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaaceeafeeaf0d200ca3942d8bf14c1c4f787a77f79cc87c08bb668e65acdee29\",\"license\":\"MIT\"},\"src/VitalikSecret.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"solidity-proxy/solc_0.8/EIP1967/Proxied.sol\\\";\\nimport \\\"solidity-kit/solc_0.8/ERC721/implementations/BasicERC721.sol\\\";\\nimport \\\"solidity-kit/solc_0.8/ERC721/interfaces/IERC721Metadata.sol\\\";\\n\\n/// @notice a puzzle\\ncontract VitalikSecret is BasicERC721, IERC721Metadata, Proxied {\\n    enum Move {\\n        RIGHT,\\n        DOWN,\\n        LEFT,\\n        UP\\n    }\\n\\n    uint256 public constant SIZE = 4;\\n    bytes public constant SOLUTION = \\\"0x123456789ABCDEF0\\\";\\n\\n    // TODO immutable but constructor match a pre-agreed block hash\\n    bytes public constant RANDOM = \\\"0x213456789ABCDFE0\\\";\\n    uint256 immutable INITIAL_POSITION = 15;\\n\\n    // TODO commit first to prevent front-running\\n    // function proposeSolution(bytes memory moves) external {\\n    function proposeSolution(Move[] calldata moves) external {\\n        bytes memory state = RANDOM;\\n        uint256 position = INITIAL_POSITION;\\n\\n        for (uint256 i = 0; i < moves.length; i++) {\\n            bool valid;\\n            (valid, position) = step(state, position, moves[i]);\\n            require(valid, \\\"INVALID_MOVE\\\");\\n        }\\n    }\\n\\n    function step(\\n        bytes memory currentState,\\n        uint256 position,\\n        Move move\\n    ) internal returns (bool valid, uint256 newPosition) {\\n        uint256 x = position % SIZE;\\n        uint256 y = position / SIZE;\\n        if (move == Move.RIGHT) {\\n            if (x < SIZE - 1) {\\n                valid = true;\\n                // newState =\\n            }\\n        } else if (move == Move.DOWN) {\\n            if (y < SIZE - 1) {\\n                valid = true;\\n                // newState =\\n            }\\n        } else if (move == Move.LEFT) {\\n            if (x > 0) {\\n                valid = true;\\n                // newState =\\n            }\\n        } else if (move == Move.UP) {\\n            if (y > 0) {\\n                valid = true;\\n                // newState =\\n            }\\n        }\\n    }\\n\\n    function tokenURI(uint256 tokenID) external view returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    function name() external pure returns (string memory) {\\n        return \\\"VITALIK SECRET\\\";\\n    }\\n\\n    function symbol() external pure returns (string memory) {\\n        return \\\"VTS\\\";\\n    }\\n\\n    // ---------------------------------------------------------------------------\\n    function _at(bytes memory data, uint256 pos) internal returns (uint256 v) {\\n        assembly {\\n            let b := mload(add(add(data, 32), div(pos, 2)))\\n            v := and(b, 0xF)\\n            if eq(mod(pos, 2), 1) {\\n                v := shr(4, b)\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbf9a32cfa970b7d1342fc943e3c8b13ae8bfed34982d70f32464c593517ab56d\",\"license\":\"MIT\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 36,
        "contract": "src/VitalikSecret.sol:VitalikSecret",
        "label": "_owners",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 40,
        "contract": "src/VitalikSecret.sol:VitalikSecret",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 46,
        "contract": "src/VitalikSecret.sol:VitalikSecret",
        "label": "_operatorsForAll",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 50,
        "contract": "src/VitalikSecret.sol:VitalikSecret",
        "label": "_operators",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "errors": {
      "InvalidAddress(address)": [
        {
          "notice": "An invalid address is specified (for example: zero address)"
        }
      ],
      "NonExistentToken(uint256)": [
        {
          "notice": "The token does not exist"
        }
      ],
      "NonceOverflow()": [
        {
          "notice": "The Nonce overflowed, make a transfer to self to allow new nonces."
        }
      ],
      "NotAuthorized()": [
        {
          "notice": "Not authorized to perform this operation"
        }
      ],
      "NotOwner(address,address)": [
        {
          "notice": "The address from which the token is sent is not the current owner"
        }
      ],
      "TransferRejected()": [
        {
          "notice": "The Transfer was rejected by the destination"
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "notice": "Triggered when a token is approved to be sent by another account  Note tat the approval get reset when a Transfer event for that same token is emitted."
      },
      "ApprovalForAll(address,address,bool)": {
        "notice": "Triggered when an account approve or disaprove another to transfer on its behalf"
      },
      "Transfer(address,address,uint256)": {
        "notice": "Triggered when a token is transferred"
      }
    },
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "Approve an operator to transfer a specific token on the senders behalf."
      },
      "balanceOf(address)": {
        "notice": "Get the number of tokens owned by an address."
      },
      "getApproved(uint256)": {
        "notice": "Get the approved operator for a specific token."
      },
      "isApprovedForAll(address,address)": {
        "notice": "Check if the sender approved the operator to transfer any of its tokens."
      },
      "name()": {
        "notice": "A descriptive name for a collection of NFTs in this contract"
      },
      "ownerAndLastTransferBlockNumberList(uint256[])": {
        "notice": "Get the list of owner of a token and the blockNumber of its last transfer, useful to voting mechanism."
      },
      "ownerAndLastTransferBlockNumberOf(uint256)": {
        "notice": "Get the owner of a token and the blockNumber of the last transfer, useful to voting mechanism."
      },
      "ownerOf(uint256)": {
        "notice": "Get the owner of a token."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "Transfer a token between 2 addresses letting the receiver know of the transfer."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Transfer a token between 2 addresses letting the receiver knows of the transfer."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "Set the approval for an operator to manage all the tokens of the sender."
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      },
      "symbol()": {
        "notice": "An abbreviated name for NFTs in this contract"
      },
      "tokenURI(uint256)": {
        "notice": "A distinct Uniform Resource Identifier (URI) for a given asset."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer a token between 2 addresses."
      }
    },
    "notice": "a puzzle",
    "version": 1
  },
  "argsData": "0x000000000000000000000000ad994dedaab665ce5aad2a333253e3070808714900000000000000000000000061c461ecc993aadeb7e4b47e96d1b8cc37314b2000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000",
  "transaction": {
    "hash": "0x7576e5e8edd2909b7d46e8f8bd3749d7aa7302d6aaef0a826b57da174b5dddc2",
    "nonce": "0x1",
    "origin": "0x61c461ecc993aadeb7e4b47e96d1b8cc37314b20"
  },
  "receipt": {
    "confirmations": 0,
    "blockHash": "0x50fd81723f1ea3b0d5092897e6e84f9bf2a5f925d020069f20e04ec758183409",
    "blockNumber": "0x231130",
    "transactionIndex": "0x0"
  },
  "_format": "hh-sol-artifact-1"
}